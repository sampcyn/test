{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "LMS365 Cloud API",
    "contact": {
      "name": "LMS365 Help Center",
      "url": "https://helpcenter.elearningforce.com"
    }
  },
  "host": "api.365.systems",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/certificates/{certificateId}/upload": {
      "post": {
        "tags": [
          "Certificates"
        ],
        "summary": "Upload certificate image for the existing certificate",
        "operationId": "Certificates_UploadCertificateByCertificateid",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "certificateId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "uploadedFile",
            "in": "formData",
            "description": "Upload File",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/courseImages/{courseCatalogId}/upload": {
      "post": {
        "tags": [
          "CourseImages"
        ],
        "summary": "Upload course image",
        "operationId": "CourseImages_UploadByCoursecatalogid",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "courseCatalogId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "uploadedFile",
            "in": "formData",
            "description": "Upload File",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/courseImages/{courseCatalogId}/uploadBanner": {
      "post": {
        "tags": [
          "CourseImages"
        ],
        "summary": "Upload course banner image",
        "operationId": "CourseImages_UploadBannerByCoursecatalogid",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "courseCatalogId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "uploadedFile",
            "in": "formData",
            "description": "Upload File",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Enrollments({id})/SetAttendance": {
      "post": {
        "tags": [
          "Enrollments"
        ],
        "summary": "Set attendance for enrollment",
        "operationId": "Enrollments_SetAttendanceById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1,
              25,
              50,
              75,
              100
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/externalTrainings/importCourse": {
      "post": {
        "tags": [
          "ExternalTrainings"
        ],
        "summary": "Import course",
        "operationId": "ExternalTrainings_ImportCourse",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.Public.Models.ImportExternalCourseParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/externalTrainings/importProgress": {
      "post": {
        "tags": [
          "ExternalTrainings"
        ],
        "summary": "Import progress",
        "operationId": "ExternalTrainings_ImportProgress",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.Public.Models.ImportExternalProgressParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/externalTrainings/importCertificate": {
      "post": {
        "tags": [
          "ExternalTrainings"
        ],
        "summary": "Import certificate",
        "operationId": "ExternalTrainings_ImportCertificate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.Public.Models.ImportExternalCertificateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/reports/courseSessions/learnerIndividualCost": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_LearnerIndividualCost",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/scorms/upload": {
      "post": {
        "tags": [
          "Scorms"
        ],
        "summary": "Upload zip package to storage",
        "operationId": "Scorms_UploadPackage",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "uploadedFile",
            "in": "formData",
            "description": "Upload File",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/scorms/sas": {
      "get": {
        "tags": [
          "Scorms"
        ],
        "operationId": "Scorms_GetSAS",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/webhooks/subscribe": {
      "post": {
        "tags": [
          "WebHookRegistrations"
        ],
        "summary": "Subscribes (registers) a new WebHook for a given user having WebHookUri as a key value",
        "operationId": "WebHooks_Subscribe",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "webHook",
            "in": "body",
            "description": "The {Microsoft.AspNet.WebHooks.WebHook} to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNet.WebHooks.WebHook"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/webhooks/subscribe/{eventName}": {
      "post": {
        "tags": [
          "WebHookRegistrations"
        ],
        "summary": "Subscribes (registers) a new WebHook for a given user for a specific event having WebHookUri as a key value",
        "operationId": "WebHooks_SubscribeByEventname",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "webHook",
            "in": "body",
            "description": "The {Microsoft.AspNet.WebHooks.WebHook} to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNet.WebHooks.WebHook"
            }
          },
          {
            "name": "eventName",
            "in": "path",
            "description": "The event name to subscirbe to.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/webhooks/unsubscribe": {
      "post": {
        "tags": [
          "WebHookRegistrations"
        ],
        "summary": "Unsubscribes (deletes registration) of an existing WebHook for a given user having WebHookUri as a key value",
        "operationId": "WebHooks_Unsubscribe_2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "webHook",
            "in": "body",
            "description": "The {Microsoft.AspNet.WebHooks.WebHook} to delete.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNet.WebHooks.WebHook"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "WebHookRegistrations"
        ],
        "summary": "Unsubscribes (deletes registration) of an existing WebHook for a given user having WebHookUri as a key value",
        "operationId": "WebHooks_Unsubscribe_1",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "webHook",
            "in": "body",
            "description": "The {Microsoft.AspNet.WebHooks.WebHook} to delete.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNet.WebHooks.WebHook"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/webhooks/{webHookId}": {
      "delete": {
        "tags": [
          "WebHookRegistrations"
        ],
        "summary": "Unsubscribes (deletes registration) of an existing WebHook for a given user having WebHook Id as a key value",
        "operationId": "WebHooks_UnsubscribeByWebhookid",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "webHookId",
            "in": "path",
            "description": "The WebHook's id which is going to be removed.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/webhooks/filters": {
      "get": {
        "tags": [
          "WebHookRegistrations"
        ],
        "operationId": "WebHooks_GetFilters",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Microsoft.AspNet.WebHooks.WebHookFilter"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/webhooks/registrations": {
      "get": {
        "tags": [
          "WebHookRegistrations"
        ],
        "summary": "Gets all registered WebHooks for a given user.",
        "operationId": "WebHooks_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Microsoft.AspNet.WebHooks.WebHook"
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "WebHookRegistrations"
        ],
        "summary": "Registers a new WebHook for a given user.",
        "operationId": "WebHooks_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "webHook",
            "in": "body",
            "description": "The {Microsoft.AspNet.WebHooks.WebHook} to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNet.WebHooks.WebHook"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNet.WebHooks.WebHook"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "WebHookRegistrations"
        ],
        "summary": "Deletes all existing WebHook registrations.",
        "operationId": "WebHooks_DeleteAll",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/webhooks/registrations/{id}": {
      "get": {
        "tags": [
          "WebHookRegistrations"
        ],
        "summary": "Looks up a registered WebHooks with the given {id} for a given user.",
        "operationId": "WebHooks_LookupById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNet.WebHooks.WebHook"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "WebHookRegistrations"
        ],
        "summary": "Updates an existing WebHook registration.",
        "operationId": "WebHooks_PutById",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The WebHook ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "webHook",
            "in": "body",
            "description": "The new {Microsoft.AspNet.WebHooks.WebHook} to use.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Microsoft.AspNet.WebHooks.WebHook"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "WebHookRegistrations"
        ],
        "summary": "Deletes an existing WebHook registration.",
        "operationId": "WebHooks_DeleteById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The WebHook ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Apps": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Returns the list of Apps",
        "operationId": "AppsV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.App]]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Apps({Id})": {
      "get": {
        "tags": [
          "Apps"
        ],
        "summary": "Returns the App by Id",
        "operationId": "AppsV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.App"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Assignments": {
      "get": {
        "tags": [
          "Assignments"
        ],
        "summary": "Returns the list of Assignments",
        "description": "Result includes assignments from courses where current user has active enrollment",
        "operationId": "AssignmentsV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Assignment]]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Assignments"
        ],
        "summary": "Creates new assignment",
        "operationId": "AssignmentsV2_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Assignment",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Assignment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Assignments({Id})": {
      "get": {
        "tags": [
          "Assignments"
        ],
        "summary": "Returns the Assignment by Id",
        "operationId": "AssignmentsV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Assignment"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Certificates({Id})/Content()": {
      "get": {
        "tags": [
          "Certificates"
        ],
        "summary": "Returns the content (picture) of Certificate",
        "operationId": "CertificatesV2_ContentById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Certificates": {
      "get": {
        "tags": [
          "Certificates"
        ],
        "summary": "Returns the list of Certificates owned by current user",
        "operationId": "CertificatesV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Certificate]]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Certificates"
        ],
        "summary": "Creates a Certificate.",
        "operationId": "CertificatesV2_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "certificate",
            "in": "body",
            "description": "Certificate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Certificate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Certificates({Id})": {
      "get": {
        "tags": [
          "Certificates"
        ],
        "summary": "Returns Certificate by Id",
        "operationId": "CertificatesV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Certificate"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Certificates/BySubordinates(managerId={managerId})": {
      "get": {
        "tags": [
          "Certificates"
        ],
        "summary": "Returns the list of Certificates for subordinates of user",
        "operationId": "CertificatesV2_BySubordinates",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "managerId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Certificate]]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Certificates/AllByUser()": {
      "get": {
        "tags": [
          "Certificates"
        ],
        "summary": "Call operation  AllByUser",
        "operationId": "CertificatesV2_AllByUser",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Certificate]]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Certificates({Id})/Reissue": {
      "post": {
        "tags": [
          "Certificates"
        ],
        "summary": "Reissue Certificate",
        "operationId": "CertificatesV2_ReissueById",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Certificate Template ID",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "templateId": {
                  "format": "guid",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/CourseCatalogs({Id})/IsUrlAvailable(courseUrl='{courseUrl}')": {
      "get": {
        "tags": [
          "CourseCatalogs"
        ],
        "summary": "Check if course url is available",
        "operationId": "CourseCatalogsV2_IsUrlAvailableByIdAndCourseurl",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "courseUrl",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/CertificateTemplates": {
      "get": {
        "tags": [
          "CertificateTemplates"
        ],
        "summary": "Returns the list of Certificate Templates",
        "operationId": "CertificateTemplatesV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.CertificateTemplate]]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "CertificateTemplates"
        ],
        "summary": "Creates a Certificate Template.",
        "operationId": "CertificateTemplatesV2_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "certificateTemplate",
            "in": "body",
            "description": "Certificate Template",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CertificateTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/CertificateTemplates({Id})": {
      "get": {
        "tags": [
          "CertificateTemplates"
        ],
        "summary": "Returns the Certificate Template by Id",
        "operationId": "CertificateTemplatesV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CertificateTemplate"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "CertificateTemplates"
        ],
        "summary": "Update a Certificate Template.",
        "operationId": "CertificateTemplatesV2_PutById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateTemplate",
            "in": "body",
            "description": "Certificate Template",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CertificateTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "CertificateTemplates"
        ],
        "summary": "Delete a Certificate Template.",
        "operationId": "CertificateTemplatesV2_DeleteById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Competencies": {
      "get": {
        "tags": [
          "Competencies"
        ],
        "summary": "Returns all competencies",
        "operationId": "CompetenciesV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Competency]]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Competencies"
        ],
        "summary": "Creates a competency",
        "operationId": "CompetenciesV2_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "competency",
            "in": "body",
            "description": "competency",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Competency"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Competencies({Id})": {
      "get": {
        "tags": [
          "Competencies"
        ],
        "summary": "Returns competency by id",
        "operationId": "CompetenciesV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Competency"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Competencies"
        ],
        "summary": "Updates a competency",
        "operationId": "CompetenciesV2_PutById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "competency",
            "in": "body",
            "description": "competency",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Competency"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Competencies"
        ],
        "summary": "Deletes competency by id",
        "operationId": "CompetenciesV2_DeleteById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Competencies"
        ],
        "summary": "Update entity in EntitySet Competencies",
        "operationId": "CompetenciesV2_PatchById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "Competency",
            "in": "body",
            "description": "The entity to patch",
            "required": true,
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/CompetencyCategories": {
      "get": {
        "tags": [
          "CompetencyCategories"
        ],
        "summary": "Returns all competency categories",
        "operationId": "CompetencyCategoriesV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.CompetencyCategory]]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "CompetencyCategories"
        ],
        "summary": "Creates a competency category",
        "operationId": "CompetencyCategoriesV2_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "CompetencyCategory",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CompetencyCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/CompetencyCategories({Id})": {
      "get": {
        "tags": [
          "CompetencyCategories"
        ],
        "summary": "Returns competency category by Id",
        "operationId": "CompetencyCategoriesV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CompetencyCategory"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "CompetencyCategories"
        ],
        "summary": "Updates a category",
        "operationId": "CompetencyCategoriesV2_PutById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "CompetencyCategory",
            "in": "body",
            "description": "The entity to put",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CompetencyCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "CompetencyCategories"
        ],
        "summary": "Deletes category by id",
        "operationId": "CompetencyCategoriesV2_DeleteById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/CompetencyScaleSets": {
      "get": {
        "tags": [
          "CompetencyScaleSets"
        ],
        "summary": "Returns all competency scale sets",
        "operationId": "CompetencyScaleSetsV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.CompetencyScaleSet]]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "CompetencyScaleSets"
        ],
        "summary": "Creates a scale set",
        "operationId": "CompetencyScaleSetsV2_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "CompetencyScaleSet",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CompetencyScaleSet"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/CompetencyScaleSets({Id})": {
      "get": {
        "tags": [
          "CompetencyScaleSets"
        ],
        "summary": "Returns competency scale set by id",
        "operationId": "CompetencyScaleSetsV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CompetencyScaleSet"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "CompetencyScaleSets"
        ],
        "summary": "Updates a scale set",
        "operationId": "CompetencyScaleSetsV2_PutById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "CompetencyScaleSet",
            "in": "body",
            "description": "The entity to put",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CompetencyScaleSet"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "CompetencyScaleSets"
        ],
        "summary": "Deletes scale set by id",
        "operationId": "CompetencyScaleSetsV2_DeleteById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/CompetencyTags": {
      "get": {
        "tags": [
          "CompetencyTags"
        ],
        "summary": "Returns all tags",
        "operationId": "CompetencyTagsV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.CompetencyTag]]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "CompetencyTags"
        ],
        "summary": "Creates a tag",
        "operationId": "CompetencyTagsV2_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "CompetencyTag",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CompetencyTag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/CompetencyTags({Id})": {
      "get": {
        "tags": [
          "CompetencyTags"
        ],
        "summary": "Returns tag by id",
        "operationId": "CompetencyTagsV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CompetencyTag"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "CompetencyTags"
        ],
        "summary": "Updates a tag",
        "operationId": "CompetencyTagsV2_PutById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "CompetencyTag",
            "in": "body",
            "description": "The entity to put",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CompetencyTag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "CompetencyTags"
        ],
        "summary": "Deletes tag by id",
        "operationId": "CompetencyTagsV2_DeleteById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/CourseCatalogs": {
      "get": {
        "tags": [
          "CourseCatalogs"
        ],
        "summary": "Returns the list of Course Catalogs",
        "operationId": "CourseCatalogsV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.CourseCatalog]]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "CourseCatalogs"
        ],
        "summary": "Creates new Course Catalog",
        "operationId": "CourseCatalogsV2_Post",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "CourseCatalog",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CourseCatalogCreationParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/CourseCatalogs({Id})": {
      "get": {
        "tags": [
          "CourseCatalogs"
        ],
        "summary": "Returns the Course Catalog by Id",
        "operationId": "CourseCatalogsV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CourseCatalog"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "CourseCatalogs"
        ],
        "summary": "Updates existing Course Catalog",
        "operationId": "CourseCatalogsV2_PutById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "CourseCatalog",
            "in": "body",
            "description": "The entity to put",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CourseCatalogOwnersParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "CourseCatalogs"
        ],
        "summary": "Delete entity in EntitySet CourseCatalogs",
        "operationId": "CourseCatalogsV2_DeleteById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "CourseCatalogs"
        ],
        "summary": "Updates individual fields of existing Course Catalog",
        "operationId": "CourseCatalogsV2_PatchById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "CourseCatalog",
            "in": "body",
            "description": "The entity to patch",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CourseCatalogUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/CourseCatalogs({Id})/UploadImage": {
      "post": {
        "tags": [
          "CourseCatalogs"
        ],
        "summary": "Call operation  UploadImage",
        "operationId": "CourseCatalogsV2_UploadImageById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "UploadImage action parameters",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "contentUrl": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/CourseCatalogs({Id})/UpdateUrl": {
      "post": {
        "tags": [
          "CourseCatalogs"
        ],
        "summary": "Updates Course Catalog url if it was renamed in SharePoint",
        "operationId": "CourseCatalogsV2_UpdateUrlById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Courses({Id})/Enroll": {
      "post": {
        "tags": [
          "Courses"
        ],
        "summary": "Enrolls user in a course",
        "description": "UserLoginName parameter is not required, if not specified current user login name will be used.\r\n            If CourseSessionId parameter is not specified for single-session course user should visit the course home page to select a session.\r\n            Teachers can enroll any user in a course, others can enroll only themselves.",
        "operationId": "CoursesV2_EnrollById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "userLoginName": {
                  "type": "string"
                },
                "courseSessionId": {
                  "format": "guid",
                  "type": "string"
                },
                "ignoreMaxAttendees": {
                  "type": "boolean"
                },
                "ignoreEnrollmentFlow": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Enrollment"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/CourseCatalogs({id})/Users": {
      "post": {
        "tags": [
          "CourseCatalogs"
        ],
        "summary": "Add user to the Course Catalog",
        "operationId": "CourseCatalogsV2_AddUserById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/CourseCatalogs({id})/Users('{userLogin}')": {
      "delete": {
        "tags": [
          "CourseCatalogs"
        ],
        "summary": "Remove user from course catalog",
        "operationId": "CourseCatalogsV2_DeleteUserByIdAndUserlogin",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Course catalog id",
            "required": true,
            "type": "string"
          },
          {
            "name": "userLogin",
            "in": "path",
            "description": "User login",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/CourseCategories": {
      "get": {
        "tags": [
          "CourseCategories"
        ],
        "summary": "Returns All Categories",
        "operationId": "CourseCategoriesV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Category]]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "CourseCategories"
        ],
        "summary": "Creates a Category",
        "operationId": "CourseCategoriesV2_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "body",
            "description": "Category",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/CourseCategories({Id})": {
      "get": {
        "tags": [
          "CourseCategories"
        ],
        "summary": "Returns Category by Id",
        "operationId": "CourseCategoriesV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Category"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "CourseCategories"
        ],
        "summary": "Updates a Category",
        "operationId": "CourseCategoriesV2_PutById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "category",
            "in": "body",
            "description": "Category",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "CourseCategories"
        ],
        "summary": "Deletes Category by Id",
        "operationId": "CourseCategoriesV2_DeleteById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/CourseCompletionSets": {
      "get": {
        "tags": [
          "CourseCompletionSets"
        ],
        "summary": "Returns all course completion sets",
        "operationId": "CourseCompletionSetsV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.OData.V2.Models.CourseCompletionSet]]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "CourseCompletionSets"
        ],
        "summary": "Creates new course completion set",
        "operationId": "CourseCompletionSetsV2_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "CourseCompletionSet",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.OData.V2.Models.CourseCompletionSet"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/CourseCompletionSets({Id})": {
      "get": {
        "tags": [
          "CourseCompletionSets"
        ],
        "summary": "Returns course completion set by id",
        "operationId": "CourseCompletionSetsV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.OData.V2.Models.CourseCompletionSet"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "CourseCompletionSets"
        ],
        "summary": "Updates course completion set",
        "operationId": "CourseCompletionSetsV2_PutById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "CourseCompletionSet",
            "in": "body",
            "description": "The entity to put",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.OData.V2.Models.CourseCompletionSet"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "CourseCompletionSets"
        ],
        "summary": "Deletes course completion set",
        "operationId": "CourseCompletionSetsV2_DeleteById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/CourseLayouts": {
      "get": {
        "tags": [
          "CourseLayouts"
        ],
        "summary": "Deprecated. Returns a list of available course layouts on tenant",
        "operationId": "CourseLayoutsV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.CourseLayout]]"
            }
          }
        },
        "deprecated": true
      }
    },
    "/odata/v2/CourseLayouts({Id})": {
      "get": {
        "tags": [
          "CourseLayouts"
        ],
        "summary": "Deprecated. Returns course layout by id",
        "operationId": "CourseLayoutsV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CourseLayout"
            }
          }
        },
        "deprecated": true
      }
    },
    "/odata/v2/Courses": {
      "get": {
        "tags": [
          "Courses"
        ],
        "summary": "Returns the list of Courses",
        "description": "If current user is added to course it's possible to expand course related entities like Learning modules, Scorms, Quizzes, Assignments, Enrollments",
        "operationId": "CoursesV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Course]]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Courses"
        ],
        "summary": "Creates new Course",
        "operationId": "CoursesV2_Post",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Course",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CourseCreationParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Courses({Id})": {
      "get": {
        "tags": [
          "Courses"
        ],
        "summary": "Returns the Course by Id",
        "description": "If current user is added to course it's possible to expand course related entities like Learning modules, Scorms, Quizzes, Assignments, Enrollments",
        "operationId": "CoursesV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Course"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Courses"
        ],
        "summary": "Updates Course",
        "operationId": "CoursesV2_PutById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "Course",
            "in": "body",
            "description": "The entity to put",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CourseUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Courses"
        ],
        "summary": "Updates Course partially",
        "operationId": "CoursesV2_PatchById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "Course",
            "in": "body",
            "description": "The entity to patch",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CourseUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Courses({Id})/WaitingList": {
      "post": {
        "tags": [
          "Courses"
        ],
        "summary": "Call operation  WaitingList",
        "operationId": "CoursesV2_WaitingListById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "WaitingList action parameters",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "userLoginName": {
                  "type": "string"
                },
                "courseSessionId": {
                  "format": "guid",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Courses({Id})/Image()": {
      "get": {
        "tags": [
          "Courses"
        ],
        "summary": "Returns image used for course",
        "operationId": "CoursesV2_ImageById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Courses({Id})/Rate": {
      "post": {
        "tags": [
          "Courses"
        ],
        "summary": "Set course rating",
        "operationId": "CoursesV2_RateById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "required": [
                "rating"
              ],
              "type": "object",
              "properties": {
                "rating": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Courses({Id})/Purge": {
      "post": {
        "tags": [
          "Courses"
        ],
        "summary": "Purges course's data",
        "operationId": "CoursesV2_PurgeById",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Courses({Id})/UserRating()": {
      "get": {
        "tags": [
          "Courses"
        ],
        "summary": "Get course rating for current user",
        "operationId": "CoursesV2_UserRatingById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Courses({Id})/UserRating(userId={userId})": {
      "get": {
        "tags": [
          "Courses"
        ],
        "summary": "Get course rating for specific user",
        "operationId": "CoursesV2_UserRatingByIdAndUserid",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Courses({Id})/Prerequisites()": {
      "get": {
        "tags": [
          "Courses"
        ],
        "summary": "Call operation  Prerequisites",
        "operationId": "CoursesV2_PrerequisitesById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Courses/IncludeDeleted()": {
      "get": {
        "tags": [
          "Courses"
        ],
        "summary": "Returns the list of Courses including courses which have been deleted.",
        "operationId": "CoursesV2_IncludeDeleted",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Course]]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Courses/IncludeNotCreated()": {
      "get": {
        "tags": [
          "Courses"
        ],
        "summary": "Returns the list of Courses including courses which have not created yet.",
        "operationId": "CoursesV2_IncludeNotCreated",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Course]]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Courses/ManagedByMe()": {
      "get": {
        "tags": [
          "Courses"
        ],
        "summary": "Returns the list of Courses that are managed by current user.",
        "operationId": "CoursesV2_ManagedByMe",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Course]]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Courses({Id})/SetCompletionOptions": {
      "post": {
        "tags": [
          "Courses"
        ],
        "summary": "some description",
        "description": "Input parameters: https://api.365.systems/Documentation/html/types.html#course-completion-options",
        "operationId": "CoursesV2_SetCompletionOptionsById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "required": [
                "completionCriteria"
              ],
              "type": "object",
              "properties": {
                "completionCriteria": {
                  "enum": [
                    "Scorm",
                    "Course",
                    "Assignments",
                    "LearningPath",
                    "Quiz",
                    "GradebookColumn",
                    "Attendance",
                    "TrainingPlanCourses",
                    "ExternalApp"
                  ],
                  "type": "string"
                },
                "completionOptions": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Enrollments/Expired()": {
      "get": {
        "tags": [
          "Enrollments"
        ],
        "summary": "Returns the list of current user's expired enrollments",
        "description": "Enrollments are filtered by Expired status.",
        "operationId": "EnrollmentsV2_Expired",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Enrollment]]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Courses({id})/CourseSessions({courseSessionId})": {
      "get": {
        "tags": [
          "Courses"
        ],
        "summary": "Returns the Course Session by Id",
        "operationId": "CoursesV2_GetCourseSessionByIdAndCoursesessionid",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Course Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "courseSessionId",
            "in": "path",
            "description": "Course Session Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CourseSession"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Courses"
        ],
        "summary": "Updates Course Session",
        "operationId": "CoursesV2_UpdateCourseSessionByIdAndCoursesessionid",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Course Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "courseSessionId",
            "in": "path",
            "description": "Course Session Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "courseSession",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CourseSession"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Courses"
        ],
        "summary": "Deletes Course Session",
        "operationId": "CoursesV2_DeleteCourseSessionFromCourseByIdAndCoursesessionid",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Course Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "courseSessionId",
            "in": "path",
            "description": "Course Session Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Courses({id})/CourseSessions": {
      "post": {
        "tags": [
          "Courses"
        ],
        "summary": "Adds new Course Session to the Course",
        "operationId": "CoursesV2_AddCourseSessionById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Course Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "courseSession",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CourseSession"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/CourseSessionRequests": {
      "get": {
        "tags": [
          "CourseSessionRequests"
        ],
        "summary": "Returns the list of Course Session Requests",
        "operationId": "CourseSessionRequestsV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.OData.V2.Models.CourseSessionRequest]]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "CourseSessionRequests"
        ],
        "summary": "Adds new Course Session Request to the Course",
        "operationId": "CourseSessionRequestsV2_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "courseSessionRequest",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.OData.V2.Models.CourseSessionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/CourseSessionRequests({Id})": {
      "get": {
        "tags": [
          "CourseSessionRequests"
        ],
        "summary": "Returns Course Session Request by Id",
        "operationId": "CourseSessionRequestsV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.OData.V2.Models.CourseSessionRequest"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "CourseSessionRequests"
        ],
        "summary": "Delete Course Session Request",
        "operationId": "CourseSessionRequestsV2_DeleteById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/CourseSessions": {
      "get": {
        "tags": [
          "CourseSessions"
        ],
        "summary": "Returns the list of Course Sessions",
        "operationId": "CourseSessionsV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.CourseSession]]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/CourseSessions({Id})": {
      "get": {
        "tags": [
          "CourseSessions"
        ],
        "summary": "Returns Course Session by id",
        "operationId": "CourseSessionsV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CourseSession"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/CourseTags": {
      "get": {
        "tags": [
          "CourseTags"
        ],
        "summary": "Returns All Tags",
        "operationId": "CourseTagsV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Tag]]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "CourseTags"
        ],
        "summary": "Creates a Tag",
        "operationId": "CourseTagsV2_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tag",
            "in": "body",
            "description": "Tag",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Tag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/CourseTags({Id})": {
      "get": {
        "tags": [
          "CourseTags"
        ],
        "summary": "Returns Tag by Id",
        "operationId": "CourseTagsV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Tag"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "CourseTags"
        ],
        "summary": "Updates a Tag",
        "operationId": "CourseTagsV2_PutById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "body",
            "description": "Tag",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Tag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "CourseTags"
        ],
        "summary": "Deletes a Tag",
        "operationId": "CourseTagsV2_DeleteById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/EnrollmentFlows": {
      "get": {
        "tags": [
          "EnrollmentFlows"
        ],
        "summary": "Returns the list of Enrollment Flows",
        "operationId": "EnrollmentFlowsV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.EnrollmentFlow]]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/EnrollmentFlows({Id})": {
      "get": {
        "tags": [
          "EnrollmentFlows"
        ],
        "summary": "Returns the Enrollment Flow by Id",
        "operationId": "EnrollmentFlowsV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.EnrollmentFlow"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Enrollments": {
      "get": {
        "tags": [
          "Enrollments"
        ],
        "summary": "Returns the list of current user's active Enrollments",
        "description": "Enrollments are filtered by Active and Awaiting status.",
        "operationId": "EnrollmentsV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Enrollment]]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Enrollments"
        ],
        "summary": "Creates an Enrollment.",
        "description": "If CourseSessionId parameter is not specified for single-session course user should visit the course home page to select a session.",
        "operationId": "EnrollmentsV2_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "enrollment",
            "in": "body",
            "description": "Enrollment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Enrollment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Enrollments({Id})": {
      "get": {
        "tags": [
          "Enrollments"
        ],
        "summary": "Returns the Enrollment by Id",
        "operationId": "EnrollmentsV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Enrollment"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Enrollments"
        ],
        "summary": "Updates a Enrollment partially. Input data won't be validated, be careful using this method.",
        "operationId": "EnrollmentsV2_PatchById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "Enrollment",
            "in": "body",
            "description": "The entity to patch",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.OData.V2.Models.EnrollmentUpdateData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Enrollments/Cancelled()": {
      "get": {
        "tags": [
          "Enrollments"
        ],
        "summary": "Returns the list of current user's cancelled enrollments",
        "description": "Enrollments are filtered by Cancelled status.",
        "operationId": "EnrollmentsV2_Cancelled",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Enrollment]]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Enrollments/IncludeDeleted()": {
      "get": {
        "tags": [
          "Enrollments"
        ],
        "summary": "Returns the list of current user's Enrollments including data from deleted courses",
        "description": "Enrollments are filtered by Active and Awaiting status.",
        "operationId": "EnrollmentsV2_IncludeDeleted",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Enrollment]]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Enrollments/All()": {
      "get": {
        "tags": [
          "Enrollments"
        ],
        "summary": "Returns the list of current user's Enrollments including cancelled, expired and data from deleted courses",
        "operationId": "EnrollmentsV2_All",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Enrollment]]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Enrollments/AllByUser()": {
      "get": {
        "tags": [
          "Enrollments"
        ],
        "summary": "Call operation  AllByUser",
        "operationId": "EnrollmentsV2_AllByUser",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Enrollment]]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Enrollments/IncludeDeletedUsers()": {
      "get": {
        "tags": [
          "Enrollments"
        ],
        "summary": "Returns the list of all Enrollments including cancelled, expired and data from deleted courses and users",
        "operationId": "EnrollmentsV2_IncludeDeletedUsers",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Enrollment]]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Enrollments/BySubordinates(managerId={managerId})": {
      "get": {
        "tags": [
          "Enrollments"
        ],
        "summary": "Returns the list of Certificates for subordinates of user",
        "operationId": "EnrollmentsV2_BySubordinates",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "managerId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Enrollment]]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Enrollments({Id})/Approve": {
      "post": {
        "tags": [
          "Enrollments"
        ],
        "summary": "Approves enrollment",
        "operationId": "EnrollmentsV2_ApproveById",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Enrollments({Id})/Complete": {
      "post": {
        "tags": [
          "Enrollments"
        ],
        "summary": "Call operation  Complete",
        "operationId": "EnrollmentsV2_CompleteById",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Complete action parameters",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Enrollments({Id})/Cancel": {
      "post": {
        "tags": [
          "Enrollments"
        ],
        "summary": "Cancels enrollment",
        "description": "Only enrollments with statuses Active and Awaiting can be cancelled.\r\n            If current user is a learner in a course, only their own enrollment can be cancelled.",
        "operationId": "EnrollmentsV2_CancelById",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Enrollments({Id})/Reject": {
      "post": {
        "tags": [
          "Enrollments"
        ],
        "summary": "Rejects enrollment",
        "operationId": "EnrollmentsV2_RejectById",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Enrollments({Id})/Retake": {
      "post": {
        "tags": [
          "Enrollments"
        ],
        "summary": "Retakes enrollment",
        "description": "If current user is a learner in a course, only their own enrollment can be retaken.",
        "operationId": "EnrollmentsV2_RetakeById",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "courseSessionId": {
                  "format": "guid",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Enrollments({Id})/AssociateWithCourseSession": {
      "post": {
        "tags": [
          "Enrollments"
        ],
        "summary": "Associates enrollment with course session",
        "description": "Allowed for learners enrolled via AD group into course with option 'Enroll user into a single course session' only.",
        "operationId": "EnrollmentsV2_AssociateWithCourseSessionById",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "required": [
                "courseSessionId"
              ],
              "type": "object",
              "properties": {
                "courseSessionId": {
                  "format": "guid",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Enrollments({Id})/ResetProgress": {
      "post": {
        "tags": [
          "Enrollments"
        ],
        "summary": "Call operation  ResetProgress",
        "operationId": "EnrollmentsV2_ResetProgressById",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "ResetProgress action parameters",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "Assignments": {
                  "type": "array",
                  "items": {
                    "format": "guid",
                    "type": "string",
                    "example": "guid"
                  }
                },
                "Scorms": {
                  "type": "array",
                  "items": {
                    "format": "guid",
                    "type": "string",
                    "example": "guid"
                  }
                },
                "Quizzes": {
                  "type": "array",
                  "items": {
                    "format": "guid",
                    "type": "string",
                    "example": "guid"
                  }
                },
                "LearningPaths": {
                  "type": "array",
                  "items": {
                    "format": "guid",
                    "type": "string",
                    "example": "guid"
                  }
                },
                "ExternalApps": {
                  "type": "array",
                  "items": {
                    "format": "guid",
                    "type": "string",
                    "example": "guid"
                  }
                },
                "DeleteAttendance": {
                  "type": "boolean"
                },
                "DeleteCertificate": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/ExternalApps/ParseXmlConfiguration": {
      "post": {
        "tags": [
          "ExternalApps"
        ],
        "summary": "Call operation  ParseXmlConfiguration",
        "operationId": "ExternalAppsV2_ParseXmlConfiguration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "ParseXmlConfiguration action parameters",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "config": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/ExternalApps": {
      "get": {
        "tags": [
          "ExternalApps"
        ],
        "summary": "Returns the EntitySet ExternalApps",
        "operationId": "ExternalAppsV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.ExternalApp]]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "ExternalApps"
        ],
        "summary": "Post a new entity to EntitySet ExternalApps",
        "operationId": "ExternalAppsV2_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "externalApp",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.ExternalApp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/ExternalApps({Id})": {
      "get": {
        "tags": [
          "ExternalApps"
        ],
        "summary": "Returns the entity with the key from ExternalApps",
        "operationId": "ExternalAppsV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.ExternalApp"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "ExternalApps"
        ],
        "summary": "Replace entity in EntitySet ExternalApps",
        "operationId": "ExternalAppsV2_PutById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "externalApp",
            "in": "body",
            "description": "The entity to put",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.ExternalApp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ExternalApps"
        ],
        "summary": "Delete entity in EntitySet ExternalApps",
        "operationId": "ExternalAppsV2_DeleteById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/ExternalApps({Id})/SetPosition": {
      "post": {
        "tags": [
          "ExternalApps"
        ],
        "summary": "Sets position to External App in the Course",
        "operationId": "ExternalAppsV2_SetPositionById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "'position' is a desired index of an external app within course content.",
            "required": true,
            "schema": {
              "required": [
                "position"
              ],
              "type": "object",
              "properties": {
                "position": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Scorms({Id})/Download()": {
      "get": {
        "tags": [
          "Scorms"
        ],
        "summary": "Returns entire scorm package",
        "operationId": "ScormsV2_DownloadById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/LearningModuleAttempts": {
      "get": {
        "tags": [
          "LearningModuleAttempts"
        ],
        "summary": "Returns list of Learning Module Attempts",
        "operationId": "LearningModuleAttemptsV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.LearningModuleAttempt]]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "LearningModuleAttempts"
        ],
        "summary": "Creates Learning Module Attempt",
        "operationId": "LearningModuleAttemptsV2_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "LearningModuleAttempt",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.LearningModuleAttempt"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/LearningModuleAttempts({Id})": {
      "get": {
        "tags": [
          "LearningModuleAttempts"
        ],
        "summary": "Returns Learning Module Attempt by Id",
        "operationId": "LearningModuleAttemptsV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.LearningModuleAttempt"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "LearningModuleAttempts"
        ],
        "summary": "Updates Learning Module Attempt",
        "operationId": "LearningModuleAttemptsV2_PutById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "LearningModuleAttempt",
            "in": "body",
            "description": "The entity to put",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.LearningModuleAttempt"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "LearningModuleAttempts"
        ],
        "summary": "Deletes Learning Module Attempt",
        "operationId": "LearningModuleAttemptsV2_DeleteById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/LearningModules": {
      "get": {
        "tags": [
          "LearningModules"
        ],
        "summary": "Returns the list of Learning Modules",
        "description": "Result includes learning modules from courses where current user has active enrollment",
        "operationId": "LearningModulesV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.LearningModule]]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "LearningModules"
        ],
        "summary": "Creates Learning Module",
        "operationId": "LearningModulesV2_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "learningModule",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.LearningModule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/LearningModules({Id})": {
      "get": {
        "tags": [
          "LearningModules"
        ],
        "summary": "Returns the Learning Module by Id",
        "operationId": "LearningModulesV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.LearningModule"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "LearningModules"
        ],
        "summary": "Updates Learning Module",
        "operationId": "LearningModulesV2_PutById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "learningModule",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.LearningModule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "LearningModules"
        ],
        "summary": "Deletes Learning Module",
        "operationId": "LearningModulesV2_DeleteById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/QuestionPoolCategories": {
      "get": {
        "tags": [
          "QuestionPoolCategories"
        ],
        "summary": "Returns All Categories",
        "operationId": "QuestionPoolCategoriesV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.QuestionPoolCategory]]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "QuestionPoolCategories"
        ],
        "summary": "Creates a Question Pool Category",
        "operationId": "QuestionPoolCategoriesV2_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "QuestionPoolCategory",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.QuestionPoolCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/QuestionPoolCategories({Id})": {
      "get": {
        "tags": [
          "QuestionPoolCategories"
        ],
        "summary": "Returns All Categories",
        "operationId": "QuestionPoolCategoriesV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.QuestionPoolCategory]]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/QuizAttempts": {
      "get": {
        "tags": [
          "QuizAttempts"
        ],
        "summary": "Returns list of Quiz Attempts",
        "operationId": "QuizAttemptsV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.QuizAttempt]]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/QuizAttempts({Id})": {
      "get": {
        "tags": [
          "QuizAttempts"
        ],
        "summary": "Returns Quiz Attempt by Id",
        "operationId": "QuizAttemptsV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.QuizAttempt"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/QuizQuestionPools": {
      "get": {
        "tags": [
          "QuizQuestionPools"
        ],
        "summary": "Returns the list of Quiz Question Pools",
        "operationId": "QuizQuestionPoolsV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.QuestionPool]]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "QuizQuestionPools"
        ],
        "summary": "Creates a question pool.",
        "operationId": "QuizQuestionPoolsV2_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "questionPool",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.QuestionPool"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/QuizQuestionPools({Id})": {
      "get": {
        "tags": [
          "QuizQuestionPools"
        ],
        "summary": "Returns the Quiz Question Pool by Id",
        "operationId": "QuizQuestionPoolsV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.QuestionPool"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Quizzes": {
      "get": {
        "tags": [
          "Quizzes"
        ],
        "summary": "Returns the list of Quizzes",
        "description": "Result includes quizzes from courses where current user has active enrollment",
        "operationId": "QuizzesV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Quiz]]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Quizzes"
        ],
        "summary": "Creates a Quiz.",
        "operationId": "QuizzesV2_Post",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Quiz",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.QuizCreationData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Quizzes({Id})": {
      "get": {
        "tags": [
          "Quizzes"
        ],
        "summary": "Returns the Quiz by Id",
        "operationId": "QuizzesV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Quiz"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Quizzes"
        ],
        "summary": "Updates a Quiz",
        "operationId": "QuizzesV2_PutById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "Quiz",
            "in": "body",
            "description": "The entity to put",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.QuizUpdateData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Quizzes"
        ],
        "summary": "Deletes a Quiz",
        "operationId": "QuizzesV2_DeleteById",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Quizzes"
        ],
        "summary": "Updates a Quiz partially",
        "operationId": "QuizzesV2_PatchById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "Quiz",
            "in": "body",
            "description": "The entity to patch",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.QuizUpdateData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/ScormAttempts": {
      "get": {
        "tags": [
          "ScormAttempts"
        ],
        "summary": "Returns list of scorm attempts for current user",
        "operationId": "ScormAttemptsV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.ScormAttempt]]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "ScormAttempts"
        ],
        "summary": "Creates new scorm attempt",
        "operationId": "ScormAttemptsV2_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ScormAttempt",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.ScormAttempt"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/ScormAttempts({Id})": {
      "get": {
        "tags": [
          "ScormAttempts"
        ],
        "summary": "Returns scorm attempt by Id",
        "operationId": "ScormAttemptsV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.ScormAttempt"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "ScormAttempts"
        ],
        "summary": "Updates scorm attempt",
        "operationId": "ScormAttemptsV2_PutById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "ScormAttempt",
            "in": "body",
            "description": "The entity to put",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.ScormAttempt"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Scorms": {
      "get": {
        "tags": [
          "Scorms"
        ],
        "summary": "Returns the list of Scorms",
        "description": "Result includes scorms from courses where current user has active enrollment",
        "operationId": "ScormsV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Scorm]]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Scorms"
        ],
        "summary": "Creates a SCORM.",
        "operationId": "ScormsV2_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scorm",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Scorm"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Scorms({Id})": {
      "get": {
        "tags": [
          "Scorms"
        ],
        "summary": "Returns the Scorm by Id",
        "operationId": "ScormsV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Scorm"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Scorms"
        ],
        "summary": "Updates a SCORM.",
        "operationId": "ScormsV2_PutById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "scorm",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Scorm"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Scorms"
        ],
        "summary": "Delete Scorm from the storage and all courses",
        "operationId": "ScormsV2_DeleteById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Scorms({Id})/ContentUrl(version={version})": {
      "get": {
        "tags": [
          "Scorms"
        ],
        "summary": "Returns scorm package base content url",
        "operationId": "ScormsV2_ContentUrlByIdAndVersion",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Scorms({Id})/SetPosition": {
      "post": {
        "tags": [
          "Scorms"
        ],
        "summary": "Sets position to Content Package in the Course",
        "operationId": "ScormsV2_SetPositionById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "'position' is a desired index of a content package within course content. 'courseId' is Course ID",
            "required": true,
            "schema": {
              "required": [
                "position",
                "courseId"
              ],
              "type": "object",
              "properties": {
                "position": {
                  "format": "int32",
                  "type": "integer"
                },
                "courseId": {
                  "format": "guid",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/TrainingPlans/IncludeDeleted()": {
      "get": {
        "tags": [
          "TrainingPlans"
        ],
        "summary": "Call operation  IncludeDeleted",
        "operationId": "TrainingPlansV2_IncludeDeleted",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.TrainingPlanInfo]]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/TrainingPlans": {
      "get": {
        "tags": [
          "TrainingPlans"
        ],
        "summary": "Returns the list of Training Plans",
        "operationId": "TrainingPlansV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.TrainingPlanInfo]]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/TrainingPlans({Id})": {
      "get": {
        "tags": [
          "TrainingPlans"
        ],
        "summary": "Returns the Training Plan by Id",
        "operationId": "TrainingPlansV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.TrainingPlanInfo"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Users('{LoginName}')/UpdateUserFieldValues": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Update user's field values",
        "operationId": "UsersV2_UpdateUserFieldValuesByLoginname",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "LoginName",
            "in": "path",
            "description": "key: LoginName",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "UserFieldValues": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Elearningforce.LMS.Api.OData.V2.Models.UserFieldValue"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/UserCompetencies": {
      "get": {
        "tags": [
          "UserCompetencies"
        ],
        "summary": "Returns the list of user competencies owned by current user",
        "operationId": "UserCompetenciesV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.UserCompetency]]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/UserCompetencies({Id})": {
      "get": {
        "tags": [
          "UserCompetencies"
        ],
        "summary": "Returns User Competency by Id",
        "operationId": "UserCompetenciesV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.UserCompetency"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/UserFields": {
      "get": {
        "tags": [
          "UserFields"
        ],
        "summary": "Returns all user fields",
        "operationId": "UserFieldsV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.OData.V2.Models.UserField]]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "UserFields"
        ],
        "summary": "Creates new user field",
        "operationId": "UserFieldsV2_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userField",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.OData.V2.Models.UserField"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/UserFields({Id})": {
      "get": {
        "tags": [
          "UserFields"
        ],
        "summary": "Returns user field by id",
        "operationId": "UserFieldsV2_GetById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.OData.V2.Models.UserField"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "UserFields"
        ],
        "summary": "Updates user field",
        "operationId": "UserFieldsV2_PutById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "userField",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.OData.V2.Models.UserField"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "UserFields"
        ],
        "summary": "Deletes user field",
        "operationId": "UserFieldsV2_DeleteById",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/UserRanks": {
      "get": {
        "tags": [
          "UserRanks"
        ],
        "summary": "Returns the EntitySet UserRanks",
        "operationId": "UserRanksV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.UserRank]]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/UserRanks('{UserLoginName}')": {
      "get": {
        "tags": [
          "UserRanks"
        ],
        "summary": "Returns the entity with the key from UserRanks",
        "operationId": "UserRanksV2_GetByUserloginname",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "UserLoginName",
            "in": "path",
            "description": "key: UserLoginName",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.UserRank"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns the list of Users",
        "operationId": "UsersV2_Get",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.User]]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Post a new entity to EntitySet Users",
        "operationId": "UsersV2_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Users('{LoginName}')": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns the User by login name",
        "operationId": "UsersV2_GetByLoginname",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "LoginName",
            "in": "path",
            "description": "key: LoginName",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "update user's info",
        "operationId": "UsersV2_PutByLoginname",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "LoginName",
            "in": "path",
            "description": "key: LoginName",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Users/Me()": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns current user's info",
        "operationId": "UsersV2_Me",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Users('{LoginName}')/Subordinates()": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns current user's info",
        "operationId": "UsersV2_SubordinatesByLoginname",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "LoginName",
            "in": "path",
            "description": "key: LoginName",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.User]]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Users('{LoginName}')/Photo()": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns user photo",
        "operationId": "UsersV2_PhotoByLoginname",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "LoginName",
            "in": "path",
            "description": "key: LoginName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Users('{LoginName}')/Purge": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Purges user's data",
        "operationId": "UsersV2_PurgeByLoginname",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "LoginName",
            "in": "path",
            "description": "key: LoginName",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Users('{LoginName}')/Merge": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Merges user's data",
        "operationId": "UsersV2_MergeByLoginname",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "LoginName",
            "in": "path",
            "description": "key: LoginName",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "sourceUserLoginName": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Users('{LoginName}')/GrantCompetency": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Grants competency",
        "operationId": "UsersV2_GrantCompetencyByLoginname",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "LoginName",
            "in": "path",
            "description": "key: LoginName",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "required": [
                "competencyId",
                "competencyLevelId"
              ],
              "type": "object",
              "properties": {
                "competencyId": {
                  "format": "guid",
                  "type": "string"
                },
                "competencyLevelId": {
                  "format": "guid",
                  "type": "string"
                },
                "enrollmentId": {
                  "format": "guid",
                  "type": "string"
                },
                "expiryDate": {
                  "format": "date-time",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Users('{LoginName}')/RevokeCompetency": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Revokes competency",
        "operationId": "UsersV2_RevokeCompetencyByLoginname",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "LoginName",
            "in": "path",
            "description": "key: LoginName",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "required": [
                "competencyId",
                "competencyLevelId"
              ],
              "type": "object",
              "properties": {
                "competencyId": {
                  "format": "guid",
                  "type": "string"
                },
                "competencyLevelId": {
                  "format": "guid",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "deprecated": false
      }
    },
    "/odata/v2/Assignments({Id})/Complete": {
      "post": {
        "tags": [
          "Assignments"
        ],
        "summary": "Completes specified assignment",
        "operationId": "AssignmentsV2_CompleteById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "key: Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "required": [
                "Grade"
              ],
              "type": "object",
              "properties": {
                "UserLoginName": {
                  "type": "string"
                },
                "Grade": {
                  "format": "decimal",
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/System.Object"
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "System.Object": {
      "type": "object",
      "properties": {}
    },
    "Elearningforce.LMS.Api.Public.Models.ImportExternalCourseParameters": {
      "type": "object",
      "properties": {
        "CourseCatalogId": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Collections.Generic.KeyValuePair[System.Nullable[System.Guid],System.String]"
          }
        },
        "CourseType": {
          "format": "int32",
          "enum": [
            0,
            1,
            3,
            4,
            5
          ],
          "type": "integer"
        }
      },
      "example": {
        "CourseCatalogId": "guid",
        "Title": "string",
        "Categories": [],
        "CourseType": "integer"
      }
    },
    "System.Collections.Generic.KeyValuePair[System.Nullable[System.Guid],System.String]": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "example": {
        "key": "string",
        "value": "string"
      }
    },
    "Elearningforce.LMS.Api.Public.Models.ImportExternalProgressParameters": {
      "type": "object",
      "properties": {
        "CourseId": {
          "type": "string"
        },
        "UserId": {
          "type": "string"
        },
        "CompletionDate": {
          "format": "date-time",
          "type": "string"
        },
        "Ceu": {
          "format": "double",
          "type": "number"
        }
      },
      "example": {
        "CourseId": "guid",
        "UserId": "guid",
        "CompletionDate": "2022-04-07T08:10:39Z",
        "Ceu": "number"
      }
    },
    "Elearningforce.LMS.Api.Public.Models.ImportExternalCertificateParameters": {
      "type": "object",
      "properties": {
        "EnrollmentId": {
          "type": "string"
        },
        "ExpiryDate": {
          "format": "date-time",
          "type": "string"
        },
        "TemplateId": {
          "type": "string"
        }
      },
      "example": {
        "EnrollmentId": "guid",
        "ExpiryDate": "2022-04-07T08:10:39Z",
        "TemplateId": "guid"
      }
    },
    "Microsoft.AspNet.WebHooks.WebHook": {
      "required": [
        "WebHookUri",
        "Secret"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "WebHookUri": {
          "type": "string"
        },
        "Secret": {
          "maxLength": 64,
          "minLength": 32,
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "IsPaused": {
          "type": "boolean"
        },
        "Filters": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "Headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "Properties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/System.Object"
          },
          "readOnly": true
        }
      },
      "example": {
        "Id": "guid",
        "WebHookUri": "string",
        "Secret": "string",
        "Description": "string",
        "IsPaused": "boolean",
        "Filters": [],
        "Headers": {},
        "Properties": {}
      }
    },
    "Microsoft.AspNet.WebHooks.WebHookFilter": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      },
      "example": {
        "Name": "string",
        "Description": "string"
      }
    },
    "System.Web.OData.Query.ODataQueryOptions": {
      "type": "object",
      "properties": {
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        },
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        }
      },
      "example": {
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {},
        "IfMatch": {},
        "IfNoneMatch": {}
      }
    },
    "System.Web.OData.ODataQueryContext": {
      "type": "object",
      "properties": {
        "Model": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmModel",
          "readOnly": true
        },
        "ElementType": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmType",
          "readOnly": true
        },
        "NavigationSource": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmNavigationSource",
          "readOnly": true
        },
        "ElementClrType": {
          "type": "string",
          "readOnly": true
        },
        "Path": {
          "$ref": "#/definitions/System.Web.OData.Routing.ODataPath",
          "readOnly": true
        }
      },
      "example": {
        "Model": {},
        "ElementType": {},
        "NavigationSource": {},
        "ElementClrType": "string",
        "Path": {}
      }
    },
    "System.Web.OData.Query.ODataRawQueryOptions": {
      "type": "object",
      "properties": {
        "Filter": {
          "type": "string",
          "readOnly": true
        },
        "OrderBy": {
          "type": "string",
          "readOnly": true
        },
        "Top": {
          "type": "string",
          "readOnly": true
        },
        "Skip": {
          "type": "string",
          "readOnly": true
        },
        "Select": {
          "type": "string",
          "readOnly": true
        },
        "Expand": {
          "type": "string",
          "readOnly": true
        },
        "Count": {
          "type": "string",
          "readOnly": true
        },
        "Format": {
          "type": "string",
          "readOnly": true
        },
        "SkipToken": {
          "type": "string",
          "readOnly": true
        },
        "DeltaToken": {
          "type": "string",
          "readOnly": true
        }
      },
      "example": {
        "Filter": "string",
        "OrderBy": "string",
        "Top": "string",
        "Skip": "string",
        "Select": "string",
        "Expand": "string",
        "Count": "string",
        "Format": "string",
        "SkipToken": "string",
        "DeltaToken": "string"
      }
    },
    "System.Web.OData.Query.SelectExpandQueryOption": {
      "type": "object",
      "properties": {
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "RawSelect": {
          "type": "string",
          "readOnly": true
        },
        "RawExpand": {
          "type": "string",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.SelectExpandQueryValidator"
        },
        "SelectExpandClause": {
          "$ref": "#/definitions/Microsoft.OData.Core.UriParser.Semantic.SelectExpandClause",
          "readOnly": true
        },
        "LevelsMaxLiteralExpansionDepth": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "Context": {},
        "RawSelect": "string",
        "RawExpand": "string",
        "Validator": {},
        "SelectExpandClause": {},
        "LevelsMaxLiteralExpansionDepth": "integer"
      }
    },
    "System.Web.OData.Query.FilterQueryOption": {
      "type": "object",
      "properties": {
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.FilterQueryValidator"
        },
        "FilterClause": {
          "$ref": "#/definitions/Microsoft.OData.Core.UriParser.Semantic.FilterClause",
          "readOnly": true
        },
        "RawValue": {
          "type": "string",
          "readOnly": true
        }
      },
      "example": {
        "Context": {},
        "Validator": {},
        "FilterClause": {},
        "RawValue": "string"
      }
    },
    "System.Web.OData.Query.OrderByQueryOption": {
      "type": "object",
      "properties": {
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "OrderByNodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Web.OData.Query.OrderByNode"
          },
          "readOnly": true
        },
        "RawValue": {
          "type": "string",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.OrderByQueryValidator"
        },
        "OrderByClause": {
          "$ref": "#/definitions/Microsoft.OData.Core.UriParser.Semantic.OrderByClause",
          "readOnly": true
        }
      },
      "example": {
        "Context": {},
        "OrderByNodes": [],
        "RawValue": "string",
        "Validator": {},
        "OrderByClause": {}
      }
    },
    "System.Web.OData.Query.SkipQueryOption": {
      "type": "object",
      "properties": {
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "RawValue": {
          "type": "string",
          "readOnly": true
        },
        "Value": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.SkipQueryValidator"
        }
      },
      "example": {
        "Context": {},
        "RawValue": "string",
        "Value": "integer",
        "Validator": {}
      }
    },
    "System.Web.OData.Query.TopQueryOption": {
      "type": "object",
      "properties": {
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "RawValue": {
          "type": "string",
          "readOnly": true
        },
        "Value": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.TopQueryValidator"
        }
      },
      "example": {
        "Context": {},
        "RawValue": "string",
        "Value": "integer",
        "Validator": {}
      }
    },
    "System.Web.OData.Query.CountQueryOption": {
      "type": "object",
      "properties": {
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "RawValue": {
          "type": "string",
          "readOnly": true
        },
        "Value": {
          "type": "boolean",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.CountQueryValidator"
        }
      },
      "example": {
        "Context": {},
        "RawValue": "string",
        "Value": "boolean",
        "Validator": {}
      }
    },
    "System.Web.OData.Query.Validators.ODataQueryValidator": {
      "type": "object",
      "properties": {}
    },
    "Microsoft.OData.Edm.IEdmModel": {
      "type": "object",
      "properties": {
        "SchemaElements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.OData.Edm.IEdmSchemaElement"
          },
          "readOnly": true
        },
        "VocabularyAnnotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.OData.Edm.Annotations.IEdmVocabularyAnnotation"
          },
          "readOnly": true
        },
        "ReferencedModels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.OData.Edm.IEdmModel"
          },
          "readOnly": true
        },
        "DeclaredNamespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "DirectValueAnnotationsManager": {
          "$ref": "#/definitions/Microsoft.OData.Edm.Annotations.IEdmDirectValueAnnotationsManager",
          "readOnly": true
        },
        "EntityContainer": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmEntityContainer",
          "readOnly": true
        }
      },
      "example": {
        "SchemaElements": [],
        "VocabularyAnnotations": [],
        "ReferencedModels": [],
        "DeclaredNamespaces": [],
        "DirectValueAnnotationsManager": {},
        "EntityContainer": {}
      }
    },
    "Microsoft.OData.Edm.IEdmType": {
      "type": "object",
      "properties": {
        "TypeKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "readOnly": true
        }
      },
      "example": {
        "TypeKind": "integer"
      }
    },
    "Microsoft.OData.Edm.IEdmNavigationSource": {
      "type": "object",
      "properties": {
        "NavigationPropertyBindings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.OData.Edm.IEdmNavigationPropertyBinding"
          },
          "readOnly": true
        },
        "Path": {
          "$ref": "#/definitions/Microsoft.OData.Edm.Expressions.IEdmPathExpression",
          "readOnly": true
        },
        "Type": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmType",
          "readOnly": true
        },
        "Name": {
          "type": "string",
          "readOnly": true
        }
      },
      "example": {
        "NavigationPropertyBindings": [],
        "Path": {},
        "Type": {},
        "Name": "string"
      }
    },
    "System.Web.OData.Routing.ODataPath": {
      "type": "object",
      "properties": {
        "EdmType": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmType",
          "readOnly": true
        },
        "NavigationSource": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmNavigationSource",
          "readOnly": true
        },
        "PathTemplate": {
          "type": "string",
          "readOnly": true
        },
        "Segments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System.Web.OData.Routing.ODataPathSegment"
          },
          "readOnly": true
        }
      },
      "example": {
        "EdmType": {},
        "NavigationSource": {},
        "PathTemplate": "string",
        "Segments": []
      }
    },
    "System.Web.OData.Query.Validators.SelectExpandQueryValidator": {
      "type": "object",
      "properties": {}
    },
    "Microsoft.OData.Core.UriParser.Semantic.SelectExpandClause": {
      "type": "object",
      "properties": {
        "SelectedItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.OData.Core.UriParser.Semantic.SelectItem"
          },
          "readOnly": true
        },
        "AllSelected": {
          "type": "boolean",
          "readOnly": true
        }
      },
      "example": {
        "SelectedItems": [],
        "AllSelected": "boolean"
      }
    },
    "System.Web.OData.Query.Validators.FilterQueryValidator": {
      "type": "object",
      "properties": {}
    },
    "Microsoft.OData.Core.UriParser.Semantic.FilterClause": {
      "type": "object",
      "properties": {
        "Expression": {
          "$ref": "#/definitions/Microsoft.OData.Core.UriParser.Semantic.SingleValueNode",
          "readOnly": true
        },
        "RangeVariable": {
          "$ref": "#/definitions/Microsoft.OData.Core.UriParser.Semantic.RangeVariable",
          "readOnly": true
        },
        "ItemType": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmTypeReference",
          "readOnly": true
        }
      },
      "example": {
        "Expression": {},
        "RangeVariable": {},
        "ItemType": {}
      }
    },
    "System.Web.OData.Query.OrderByNode": {
      "type": "object",
      "properties": {
        "Direction": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer",
          "readOnly": true
        }
      },
      "example": {
        "Direction": "integer"
      }
    },
    "System.Web.OData.Query.Validators.OrderByQueryValidator": {
      "type": "object",
      "properties": {}
    },
    "Microsoft.OData.Core.UriParser.Semantic.OrderByClause": {
      "type": "object",
      "properties": {
        "ThenBy": {
          "$ref": "#/definitions/Microsoft.OData.Core.UriParser.Semantic.OrderByClause",
          "readOnly": true
        },
        "Expression": {
          "$ref": "#/definitions/Microsoft.OData.Core.UriParser.Semantic.SingleValueNode",
          "readOnly": true
        },
        "Direction": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer",
          "readOnly": true
        },
        "RangeVariable": {
          "$ref": "#/definitions/Microsoft.OData.Core.UriParser.Semantic.RangeVariable",
          "readOnly": true
        },
        "ItemType": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmTypeReference",
          "readOnly": true
        }
      },
      "example": {
        "ThenBy": {},
        "Expression": {},
        "Direction": "integer",
        "RangeVariable": {},
        "ItemType": {}
      }
    },
    "System.Web.OData.Query.Validators.SkipQueryValidator": {
      "type": "object",
      "properties": {}
    },
    "System.Web.OData.Query.Validators.TopQueryValidator": {
      "type": "object",
      "properties": {}
    },
    "System.Web.OData.Query.Validators.CountQueryValidator": {
      "type": "object",
      "properties": {}
    },
    "Microsoft.OData.Edm.IEdmSchemaElement": {
      "type": "object",
      "properties": {
        "SchemaElementKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer",
          "readOnly": true
        },
        "Namespace": {
          "type": "string",
          "readOnly": true
        },
        "Name": {
          "type": "string",
          "readOnly": true
        }
      },
      "example": {
        "SchemaElementKind": "integer",
        "Namespace": "string",
        "Name": "string"
      }
    },
    "Microsoft.OData.Edm.Annotations.IEdmVocabularyAnnotation": {
      "type": "object",
      "properties": {
        "Qualifier": {
          "type": "string",
          "readOnly": true
        },
        "Term": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmTerm",
          "readOnly": true
        },
        "Target": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmVocabularyAnnotatable",
          "readOnly": true
        }
      },
      "example": {
        "Qualifier": "string",
        "Term": {},
        "Target": {}
      }
    },
    "Microsoft.OData.Edm.Annotations.IEdmDirectValueAnnotationsManager": {
      "type": "object",
      "properties": {}
    },
    "Microsoft.OData.Edm.IEdmEntityContainer": {
      "type": "object",
      "properties": {
        "Elements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.OData.Edm.IEdmEntityContainerElement"
          },
          "readOnly": true
        },
        "SchemaElementKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer",
          "readOnly": true
        },
        "Namespace": {
          "type": "string",
          "readOnly": true
        },
        "Name": {
          "type": "string",
          "readOnly": true
        }
      },
      "example": {
        "Elements": [],
        "SchemaElementKind": "integer",
        "Namespace": "string",
        "Name": "string"
      }
    },
    "Microsoft.OData.Edm.IEdmNavigationPropertyBinding": {
      "type": "object",
      "properties": {
        "NavigationProperty": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmNavigationProperty",
          "readOnly": true
        },
        "Target": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmNavigationSource",
          "readOnly": true
        }
      },
      "example": {
        "NavigationProperty": {},
        "Target": {}
      }
    },
    "Microsoft.OData.Edm.Expressions.IEdmPathExpression": {
      "type": "object",
      "properties": {
        "Path": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "ExpressionKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30
          ],
          "type": "integer",
          "readOnly": true
        }
      },
      "example": {
        "Path": [],
        "ExpressionKind": "integer"
      }
    },
    "System.Web.OData.Routing.ODataPathSegment": {
      "type": "object",
      "properties": {
        "SegmentKind": {
          "type": "string",
          "readOnly": true
        }
      },
      "example": {
        "SegmentKind": "string"
      }
    },
    "Microsoft.OData.Core.UriParser.Semantic.SelectItem": {
      "type": "object",
      "properties": {}
    },
    "Microsoft.OData.Core.UriParser.Semantic.SingleValueNode": {
      "type": "object",
      "properties": {
        "TypeReference": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmTypeReference",
          "readOnly": true
        },
        "Kind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27
          ],
          "type": "integer",
          "readOnly": true
        }
      },
      "example": {
        "TypeReference": {},
        "Kind": "integer"
      }
    },
    "Microsoft.OData.Core.UriParser.Semantic.RangeVariable": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "readOnly": true
        },
        "TypeReference": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmTypeReference",
          "readOnly": true
        },
        "Kind": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      },
      "example": {
        "Name": "string",
        "TypeReference": {},
        "Kind": "integer"
      }
    },
    "Microsoft.OData.Edm.IEdmTypeReference": {
      "type": "object",
      "properties": {
        "IsNullable": {
          "type": "boolean",
          "readOnly": true
        },
        "Definition": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmType",
          "readOnly": true
        }
      },
      "example": {
        "IsNullable": "boolean",
        "Definition": {}
      }
    },
    "Microsoft.OData.Edm.IEdmTerm": {
      "type": "object",
      "properties": {
        "TermKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer",
          "readOnly": true
        },
        "SchemaElementKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer",
          "readOnly": true
        },
        "Namespace": {
          "type": "string",
          "readOnly": true
        },
        "Name": {
          "type": "string",
          "readOnly": true
        }
      },
      "example": {
        "TermKind": "integer",
        "SchemaElementKind": "integer",
        "Namespace": "string",
        "Name": "string"
      }
    },
    "Microsoft.OData.Edm.IEdmVocabularyAnnotatable": {
      "type": "object",
      "properties": {}
    },
    "Microsoft.OData.Edm.IEdmEntityContainerElement": {
      "type": "object",
      "properties": {
        "ContainerElementKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer",
          "readOnly": true
        },
        "Container": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmEntityContainer",
          "readOnly": true
        },
        "Name": {
          "type": "string",
          "readOnly": true
        }
      },
      "example": {
        "ContainerElementKind": "integer",
        "Container": {},
        "Name": "string"
      }
    },
    "Microsoft.OData.Edm.IEdmNavigationProperty": {
      "type": "object",
      "properties": {
        "Partner": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmNavigationProperty",
          "readOnly": true
        },
        "OnDelete": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer",
          "readOnly": true
        },
        "ContainsTarget": {
          "type": "boolean",
          "readOnly": true
        },
        "ReferentialConstraint": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmReferentialConstraint",
          "readOnly": true
        },
        "PropertyKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer",
          "readOnly": true
        },
        "Type": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmTypeReference",
          "readOnly": true
        },
        "DeclaringType": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmStructuredType",
          "readOnly": true
        },
        "Name": {
          "type": "string",
          "readOnly": true
        }
      },
      "example": {
        "Partner": {},
        "OnDelete": "integer",
        "ContainsTarget": "boolean",
        "ReferentialConstraint": {},
        "PropertyKind": "integer",
        "Type": {},
        "DeclaringType": {},
        "Name": "string"
      }
    },
    "Microsoft.OData.Edm.IEdmReferentialConstraint": {
      "type": "object",
      "properties": {
        "PropertyPairs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.OData.Edm.EdmReferentialConstraintPropertyPair"
          },
          "readOnly": true
        }
      },
      "example": {
        "PropertyPairs": []
      }
    },
    "Microsoft.OData.Edm.IEdmStructuredType": {
      "type": "object",
      "properties": {
        "IsAbstract": {
          "type": "boolean",
          "readOnly": true
        },
        "IsOpen": {
          "type": "boolean",
          "readOnly": true
        },
        "BaseType": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmStructuredType",
          "readOnly": true
        },
        "DeclaredProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microsoft.OData.Edm.IEdmProperty"
          },
          "readOnly": true
        },
        "TypeKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer",
          "readOnly": true
        }
      },
      "example": {
        "IsAbstract": "boolean",
        "IsOpen": "boolean",
        "BaseType": {},
        "DeclaredProperties": [],
        "TypeKind": "integer"
      }
    },
    "Microsoft.OData.Edm.EdmReferentialConstraintPropertyPair": {
      "type": "object",
      "properties": {
        "DependentProperty": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmStructuralProperty",
          "readOnly": true
        },
        "PrincipalProperty": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmStructuralProperty",
          "readOnly": true
        }
      },
      "example": {
        "DependentProperty": {},
        "PrincipalProperty": {}
      }
    },
    "Microsoft.OData.Edm.IEdmProperty": {
      "type": "object",
      "properties": {
        "PropertyKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer",
          "readOnly": true
        },
        "Type": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmTypeReference",
          "readOnly": true
        },
        "DeclaringType": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmStructuredType",
          "readOnly": true
        },
        "Name": {
          "type": "string",
          "readOnly": true
        }
      },
      "example": {
        "PropertyKind": "integer",
        "Type": {},
        "DeclaringType": {},
        "Name": "string"
      }
    },
    "Microsoft.OData.Edm.IEdmStructuralProperty": {
      "type": "object",
      "properties": {
        "DefaultValueString": {
          "type": "string",
          "readOnly": true
        },
        "ConcurrencyMode": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer",
          "readOnly": true
        },
        "PropertyKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer",
          "readOnly": true
        },
        "Type": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmTypeReference",
          "readOnly": true
        },
        "DeclaringType": {
          "$ref": "#/definitions/Microsoft.OData.Edm.IEdmStructuredType",
          "readOnly": true
        },
        "Name": {
          "type": "string",
          "readOnly": true
        }
      },
      "example": {
        "DefaultValueString": "string",
        "ConcurrencyMode": "integer",
        "PropertyKind": "integer",
        "Type": {},
        "DeclaringType": {},
        "Name": "string"
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.App]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.App"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.App": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "AppType": {
          "format": "int32",
          "description": "Type of app\r\n            https://api.365.systems/Documentation/html/types.html#app-type",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        }
      },
      "example": {
        "Id": "integer",
        "AppType": "integer"
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.App]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Assignment]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Assignment"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.Assignment": {
      "required": [
        "CourseId",
        "Title"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "description": "Assignment unique id",
          "type": "string"
        },
        "CourseId": {
          "description": "Course id that assignment is related to",
          "type": "string"
        },
        "Title": {
          "description": "Assignment title",
          "type": "string"
        },
        "Description": {
          "description": "Assignment description",
          "type": "string"
        },
        "Tags": {
          "description": "Assignment tags",
          "type": "string"
        },
        "OpenDate": {
          "format": "date-time",
          "description": "Assignment open date",
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "description": "Assignment due date",
          "type": "string"
        },
        "CloseDate": {
          "format": "date-time",
          "description": "Assignment close date",
          "type": "string"
        },
        "Course": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Course",
          "description": "Course entity that assignment is related to"
        },
        "ScaleSetId": {
          "description": "Assignment scale set id",
          "type": "string"
        },
        "ScaleSet": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.ScaleSet",
          "description": "Assignment scale set"
        },
        "AverageGrade": {
          "format": "double",
          "description": "Assignment average grade",
          "type": "number"
        },
        "AssignmentTasks": {
          "description": "List of assignment tasks. Id current user is learner, only their task will be visible",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.AssignmentTask"
          }
        }
      },
      "example": {
        "Id": "guid",
        "CourseId": "guid",
        "Title": "string",
        "Description": "string",
        "Tags": "string",
        "OpenDate": "2022-04-07T08:10:39Z",
        "DueDate": "2022-04-07T08:10:39Z",
        "CloseDate": "2022-04-07T08:10:39Z",
        "ScaleSetId": "guid",
        "AverageGrade": "number",
        "AssignmentTasks": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.Course": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Course unique id",
          "type": "string"
        },
        "CourseCatalogId": {
          "description": "Id of Course Catalog that course is related to",
          "type": "string"
        },
        "Title": {
          "description": "Course title",
          "type": "string"
        },
        "Description": {
          "description": "Course Description",
          "type": "string"
        },
        "LongDescription": {
          "description": "Course Long Description",
          "type": "string"
        },
        "CEU": {
          "format": "int32",
          "description": "Continuing education units",
          "type": "integer"
        },
        "DecimalCEU": {
          "format": "double",
          "description": "Continuing education units as decimal",
          "type": "number"
        },
        "ShowInCatalog": {
          "description": "Show course in catalog or not",
          "type": "boolean"
        },
        "IsRequired": {
          "description": "Is course required or not",
          "type": "boolean"
        },
        "IsPublished": {
          "description": "Is course published or not",
          "type": "boolean"
        },
        "IsEnded": {
          "description": "Is course ended or not",
          "type": "boolean"
        },
        "CourseID": {
          "description": "Course ID",
          "type": "string"
        },
        "Duration": {
          "description": "Course duration",
          "type": "string"
        },
        "CourseType": {
          "format": "int32",
          "description": "Course Type: ELearning, Blended, ClassRoom, TrainingPlan",
          "enum": [
            0,
            1,
            3,
            4,
            5
          ],
          "type": "integer"
        },
        "Url": {
          "description": "SharePoint Course url",
          "type": "string"
        },
        "ImageUrl": {
          "description": "Course image url",
          "type": "string"
        },
        "BannerImageUrl": {
          "description": "Training banner image url",
          "type": "string"
        },
        "CertificateTemplateId": {
          "description": "Id of certificate template associated with course",
          "type": "string"
        },
        "CertificateExpiry": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CertificateExpirySettings"
        },
        "EnrollmentFlow": {
          "format": "int32",
          "description": "Course enrollment flow\r\n            https://api.365.systems/Documentation/html/types.html#enrollment-flow-type",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "IsDeleted": {
          "description": "Is course deleted or not",
          "type": "boolean"
        },
        "CourseCatalog": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CourseCatalog",
          "description": "Course Catalog entity that course is related to"
        },
        "Enrollments": {
          "description": "List of course enrollments. If current user is learner, only their enrollment will be visible",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Enrollment"
          }
        },
        "Quizzes": {
          "description": "List of Quizzes associated with course. List will have items only in case if current user has active enrollment on the course",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Quiz"
          }
        },
        "Scorms": {
          "description": "List of Scorms associated with course. List will have items only in case if current user has active enrollment on the course",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Scorm"
          }
        },
        "LearningModules": {
          "description": "List of Learning Modules associated with course. List will have items only in case if current user has active enrollment on the course",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.LearningModule"
          }
        },
        "Assignments": {
          "description": "List of Assignments associated with course. List will have items only in case if current user has active enrollment on the course",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Assignment"
          }
        },
        "ExternalApps": {
          "description": "List of External Apps associated with course. List will have items only in case if current user has active enrollment on the course",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.ExternalApp"
          }
        },
        "SharepointWeb": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.SharepointWeb",
          "description": "SharePoint Site associated with this course"
        },
        "EnrollmentRequests": {
          "description": "List of course enrollment requests. If current user is learner, only their enrollment requests will be visible",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.EnrollmentRequests"
          }
        },
        "Categories": {
          "description": "List of Categories associated with course",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Category"
          }
        },
        "Tags": {
          "description": "List of Tags associated with course",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Tag"
          }
        },
        "Admins": {
          "description": "Course administrators",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User"
          }
        },
        "Trainers": {
          "description": "Course trainers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User"
          }
        },
        "Apps": {
          "description": "List of apps added to course",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.App"
          }
        },
        "CourseSessionEnrollmentType": {
          "format": "int32",
          "description": "Course session enrollment type\r\n            https://api.365.systems/Documentation/html/types.html#course-session-enrollment-type",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "MaxAttendees": {
          "format": "int32",
          "description": "Max attendees at course when CourseSessionEnrollmentType is EnrollToAll",
          "type": "integer"
        },
        "SessionRequestsEnabled": {
          "description": "Flag for enabling/disabling session requests",
          "type": "boolean"
        },
        "CourseSessions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CourseSession"
          }
        },
        "LearningItems": {
          "description": "List of learning items, associated with the course. Public, descriptive information.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.LearningItemWrapper"
          }
        },
        "CourseSessionRequests": {
          "description": "List of session requests, associated with the course.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.OData.V2.Models.CourseSessionRequest"
          }
        },
        "CreatedAt": {
          "format": "date-time",
          "description": "Date when course was created",
          "type": "string"
        },
        "Rating": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CourseAverageRating",
          "description": "Course rating"
        },
        "DueDate": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.DueDateSettings",
          "description": "Due date settings"
        },
        "Publishing": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.PublishingSettings",
          "description": "Publishing settings"
        },
        "ProvisioningProgress": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CourseProvisioningStatus",
          "description": "Provides provisioning status for the course."
        },
        "Competencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CompetencyLevel"
          }
        },
        "CompetencyRevocation": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CompetencyRevocationSettings"
        },
        "CompletionOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CourseCompletionOptions"
          }
        },
        "CompletionSets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.OData.V2.Models.CourseCompletionSet"
          }
        },
        "WaitingListEnabled": {
          "description": "Is Waiting List functionality enabled for course or not",
          "type": "boolean"
        },
        "UnenrollDisabled": {
          "description": "Is unenroll action disabled for the course",
          "type": "boolean"
        },
        "CourseTargetingEnabled": {
          "description": "Is Course Targeting enabled for the course",
          "type": "boolean"
        },
        "TimeZone": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.Internal.Models.TimeZone",
          "description": "Time zone for the course"
        },
        "IsRetakeAllowed": {
          "description": "Is Allowed to Learner to Retake Training",
          "type": "boolean"
        },
        "EnrollmentDeadline": {
          "format": "date-time",
          "description": "Deadline for enrollment to all sessions",
          "type": "string"
        }
      },
      "example": {
        "Id": "guid",
        "CourseCatalogId": "guid",
        "Title": "string",
        "Description": "string",
        "LongDescription": "string",
        "CEU": "integer",
        "DecimalCEU": "number",
        "ShowInCatalog": "boolean",
        "IsRequired": "boolean",
        "IsPublished": "boolean",
        "IsEnded": "boolean",
        "CourseID": "string",
        "Duration": "string",
        "CourseType": "integer",
        "Url": "string",
        "ImageUrl": "string",
        "BannerImageUrl": "string",
        "CertificateTemplateId": "guid",
        "CertificateExpiry": {},
        "EnrollmentFlow": "integer",
        "IsDeleted": "boolean",
        "Enrollments": [],
        "Quizzes": [],
        "Scorms": [],
        "LearningModules": [],
        "Assignments": [],
        "ExternalApps": [],
        "SharepointWeb": {},
        "EnrollmentRequests": [],
        "Categories": [],
        "Tags": [],
        "Admins": [],
        "Trainers": [],
        "Apps": [],
        "CourseSessionEnrollmentType": "integer",
        "MaxAttendees": "integer",
        "SessionRequestsEnabled": "boolean",
        "CourseSessions": [],
        "LearningItems": [],
        "CourseSessionRequests": [],
        "CreatedAt": "2022-04-07T08:10:39Z",
        "Rating": {},
        "DueDate": {},
        "Publishing": {},
        "ProvisioningProgress": {},
        "Competencies": [],
        "CompetencyRevocation": {},
        "CompletionOptions": [],
        "CompletionSets": [],
        "WaitingListEnabled": "boolean",
        "UnenrollDisabled": "boolean",
        "CourseTargetingEnabled": "boolean",
        "TimeZone": {},
        "IsRetakeAllowed": "boolean",
        "EnrollmentDeadline": "2022-04-07T08:10:39Z"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.ScaleSet": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "ScaleSet unique id",
          "type": "string"
        },
        "Title": {
          "description": "ScaleSet title",
          "type": "string"
        },
        "IsDefault": {
          "description": "Is ScaleSet default or not",
          "type": "boolean"
        },
        "Scales": {
          "description": "Scales collection",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Common.Grading.Scale"
          }
        }
      },
      "example": {
        "Id": "guid",
        "Title": "string",
        "IsDefault": "boolean",
        "Scales": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.AssignmentTask": {
      "type": "object",
      "properties": {
        "AssignmentId": {
          "description": "Id of assignment that this task is related to",
          "type": "string"
        },
        "UserLoginName": {
          "description": "Login name of user that this task is related to",
          "type": "string"
        },
        "SubmissionDate": {
          "format": "date-time",
          "description": "Task submission date",
          "type": "string"
        },
        "Status": {
          "format": "int32",
          "description": "Task status\r\n            https://api.365.systems/Documentation/html/types.html#assignment-task-status",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "Grade": {
          "format": "double",
          "description": "Task grade",
          "type": "number"
        },
        "DueStatus": {
          "format": "int32",
          "description": "Task due status\r\n            https://api.365.systems/Documentation/html/types.html#assignment-task-due-status",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "User": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User",
          "description": "User entity that this task is related to"
        },
        "Assignment": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Assignment",
          "description": "Assignment entity that this task is related to"
        }
      },
      "example": {
        "AssignmentId": "guid",
        "UserLoginName": "string",
        "SubmissionDate": "2022-04-07T08:10:39Z",
        "Status": "integer",
        "Grade": "number",
        "DueStatus": "integer",
        "User": {}
      }
    },
    "Elearningforce.LMS.Api.V2.Models.CertificateExpirySettings": {
      "type": "object",
      "properties": {
        "CourseId": {
          "type": "string"
        },
        "IsEnabled": {
          "type": "boolean"
        },
        "FixedDate": {
          "format": "date-time",
          "type": "string"
        },
        "DaysAfterCompletion": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "CourseId": "guid",
        "IsEnabled": "boolean",
        "FixedDate": "2022-04-07T08:10:39Z",
        "DaysAfterCompletion": "integer"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.CourseCatalog": {
      "type": "object",
      "properties": {
        "IsDeleted": {
          "description": "Course Catalog Deleted Status",
          "type": "boolean"
        },
        "Id": {
          "description": "Course Catalog unique id",
          "type": "string"
        },
        "Title": {
          "description": "Course Catalog title",
          "type": "string"
        },
        "DefaultCourseBannerImageUrl": {
          "description": "URL of image that is used as a default banner for Course and Training Plan home pages in this Course Catalog",
          "type": "string"
        },
        "Courses": {
          "description": "List of courses that this catalog contains",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Course"
          }
        },
        "SharepointWeb": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.SharepointWeb",
          "description": "SharePoint Site associated with this course catalog"
        },
        "Owners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User"
          }
        },
        "Users": {
          "description": "Reserved for future use. Is empty for now.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User"
          }
        }
      },
      "example": {
        "IsDeleted": "boolean",
        "Id": "guid",
        "Title": "string",
        "DefaultCourseBannerImageUrl": "string",
        "Courses": [],
        "SharepointWeb": {},
        "Owners": [],
        "Users": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.Enrollment": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Enrollment unique id",
          "type": "string"
        },
        "CourseId": {
          "description": "Id of course that enrollment is related to",
          "type": "string"
        },
        "UserId": {
          "description": "Id of user that enrollment is related to",
          "type": "string"
        },
        "UserLoginName": {
          "description": "Login name of user that enrollment is related to",
          "type": "string"
        },
        "Roles": {
          "description": "Enrollment roles: Learner, Teacher",
          "type": "array",
          "items": {
            "format": "int32",
            "enum": [
              0,
              1,
              2,
              4
            ],
            "type": "integer"
          }
        },
        "RegistrationDate": {
          "format": "date-time",
          "description": "Enrollment date",
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "description": "Date when user starts course",
          "type": "string"
        },
        "CompletionDate": {
          "format": "date-time",
          "description": "Date when user completes course",
          "type": "string"
        },
        "RegistrationStatus": {
          "format": "int32",
          "description": "Enrollment status\r\n            https://api.365.systems/Documentation/html/types.html#registration-status",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "CoursePassingStatus": {
          "format": "int32",
          "description": "Course passing status\r\n            https://api.365.systems/Documentation/html/types.html#course-passing-status",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "CertificateId": {
          "description": "Id of certificate that was acquired within this enrollment",
          "type": "string"
        },
        "CEU": {
          "format": "int32",
          "description": "Continuing education units that were earner within this enrollment",
          "type": "integer"
        },
        "DecimalCEU": {
          "format": "double",
          "description": "Continuing education units that were earner within this enrollment as decimal",
          "type": "number"
        },
        "DueDate": {
          "format": "date-time",
          "description": "Due Date, if configured for course",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "description": "End Date, if configured for course",
          "type": "string"
        },
        "CanUnenroll": {
          "description": "Can learner cancel enrollment or not",
          "type": "boolean"
        },
        "CancellationReason": {
          "description": "Reason why enrollment was cancelled. Filled by learner or teacher.",
          "type": "string"
        },
        "CourseSessionId": {
          "description": "Course Session Id that enrollment is related to",
          "type": "string"
        },
        "RegistrationStatusChangedDate": {
          "format": "date-time",
          "description": "Date when RegistrationStatus was modified",
          "type": "string"
        },
        "Course": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Course",
          "description": "Course entity that enrollment is related to"
        },
        "User": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User",
          "description": "User entity that enrollment is related to"
        },
        "Certificate": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Certificate",
          "description": "Certificate entity that was acquired within this enrollment"
        },
        "QuizUserStatuses": {
          "description": "List of quiz progress statuses for user within this enrollment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.QuizUserStatus"
          }
        },
        "ScormUserStatuses": {
          "description": "List of scorm progress statuses for user within this enrollment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.ScormUserStatus"
          }
        },
        "LearningModuleUserStatuses": {
          "description": "List of learning module progress statuses for user within this enrollment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.LearningModuleUserStatus"
          }
        },
        "ExternalAppUserStatuses": {
          "description": "List of external app progress statuses for user within this enrollment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.ExternalAppUserStatus"
          }
        },
        "Attendances": {
          "description": "List of attendances for user within this enrollment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Attendance"
          }
        },
        "AssignmentTasks": {
          "description": "List of assignment tasks for user within this enrollment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.AssignmentTask"
          }
        },
        "CourseSession": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CourseSession",
          "description": "Course Session that enrollment is related to"
        }
      },
      "example": {
        "Id": "guid",
        "CourseId": "guid",
        "UserId": "guid",
        "UserLoginName": "string",
        "Roles": [],
        "RegistrationDate": "2022-04-07T08:10:39Z",
        "StartDate": "2022-04-07T08:10:39Z",
        "CompletionDate": "2022-04-07T08:10:39Z",
        "RegistrationStatus": "integer",
        "CoursePassingStatus": "integer",
        "CertificateId": "guid",
        "CEU": "integer",
        "DecimalCEU": "number",
        "DueDate": "2022-04-07T08:10:39Z",
        "EndDate": "2022-04-07T08:10:39Z",
        "CanUnenroll": "boolean",
        "CancellationReason": "string",
        "CourseSessionId": "guid",
        "RegistrationStatusChangedDate": "2022-04-07T08:10:39Z",
        "QuizUserStatuses": [],
        "ScormUserStatuses": [],
        "LearningModuleUserStatuses": [],
        "ExternalAppUserStatuses": [],
        "Attendances": [],
        "AssignmentTasks": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.Quiz": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Quiz unique id",
          "type": "string"
        },
        "Title": {
          "description": "Quiz title",
          "type": "string"
        },
        "Description": {
          "description": "Quiz description",
          "type": "string"
        },
        "MaxAttemptsLimit": {
          "format": "int32",
          "description": "Max possible number of attempts for this quiz",
          "type": "integer"
        },
        "PassingPercentage": {
          "format": "int32",
          "description": "Percentage that user needs to get to pass this quiz",
          "type": "integer"
        },
        "IsPublished": {
          "description": "Is quiz published or not",
          "type": "boolean"
        },
        "PublishingStartDate": {
          "format": "date-time",
          "description": "Quiz publishing start date",
          "type": "string"
        },
        "PublishingEndDate": {
          "format": "date-time",
          "description": "Quiz publishing end date",
          "type": "string"
        },
        "Randomize": {
          "description": "Is quiz questions are randomized",
          "type": "boolean"
        },
        "ShowScore": {
          "description": "Show score during quiz",
          "type": "boolean"
        },
        "ShowCompletionScore": {
          "description": "Show score on completion",
          "type": "boolean"
        },
        "ShowPoints": {
          "description": "Show points",
          "type": "boolean"
        },
        "AllowReview": {
          "description": "Allow learner to review their attempt after completion or not",
          "type": "boolean"
        },
        "AllowNavigation": {
          "description": "Allow learner to navigate between questions during passing quiz",
          "type": "boolean"
        },
        "ReviewMode": {
          "format": "int32",
          "description": "Quiz review mode",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "TimeLimit": {
          "format": "int32",
          "description": "Max attempt time limit, in seconds",
          "type": "integer"
        },
        "ShowTimer": {
          "description": "Show timer in quiz player or not",
          "type": "boolean"
        },
        "Questions": {
          "description": "Quiz questions configuration",
          "type": "string"
        },
        "ModifiedAt": {
          "format": "date-time",
          "description": "When quiz was modified last time",
          "type": "string"
        },
        "CreatedAt": {
          "format": "date-time",
          "description": "When quiz was created",
          "type": "string"
        },
        "CreatedBy": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User",
          "description": "Quiz creator"
        },
        "UserStatuses": {
          "description": "List of users progress statuses for this quiz. If current user is learner only their status will be visible",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.QuizUserStatus"
          }
        },
        "Courses": {
          "description": "List of courses that quiz is associated with",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Course"
          }
        },
        "QuizQuestionPools": {
          "description": "List of question pools that quiz is associated with",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.QuestionPool"
          }
        },
        "Sharing": {
          "description": "List of quiz sharing options",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.QuizSharing"
          }
        }
      },
      "example": {
        "Id": "guid",
        "Title": "string",
        "Description": "string",
        "MaxAttemptsLimit": "integer",
        "PassingPercentage": "integer",
        "IsPublished": "boolean",
        "PublishingStartDate": "2022-04-07T08:10:39Z",
        "PublishingEndDate": "2022-04-07T08:10:39Z",
        "Randomize": "boolean",
        "ShowScore": "boolean",
        "ShowCompletionScore": "boolean",
        "ShowPoints": "boolean",
        "AllowReview": "boolean",
        "AllowNavigation": "boolean",
        "ReviewMode": "integer",
        "TimeLimit": "integer",
        "ShowTimer": "boolean",
        "Questions": "string",
        "ModifiedAt": "2022-04-07T08:10:39Z",
        "CreatedAt": "2022-04-07T08:10:39Z",
        "UserStatuses": [],
        "Courses": [],
        "QuizQuestionPools": [],
        "Sharing": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.Scorm": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Scorm unique id",
          "type": "string"
        },
        "Title": {
          "description": "Scorm title",
          "type": "string"
        },
        "Description": {
          "description": "Scorm description",
          "type": "string"
        },
        "Configuration": {
          "description": "Scorm config, serialized in JSON",
          "type": "string"
        },
        "Version": {
          "format": "int32",
          "description": "Current version of scorm package",
          "type": "integer"
        },
        "ContentType": {
          "format": "int32",
          "description": "Type of content package\r\n            https://api.365.systems/Documentation/html/types.html#scorm-content-type",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "Location": {
          "type": "string"
        },
        "FileName": {
          "type": "string"
        },
        "CreatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "ModifiedAt": {
          "format": "date-time",
          "type": "string"
        },
        "CreatedBy": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User"
        },
        "ModifiedBy": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User"
        },
        "UserStatuses": {
          "description": "List of users progress statuses for this quiz. If current user is learner only their status will be visible",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.ScormUserStatus"
          }
        },
        "Courses": {
          "description": "List of courses that this scorm in associated with",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Course"
          }
        },
        "Sharing": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.ScormSharing"
          }
        }
      },
      "example": {
        "Id": "guid",
        "Title": "string",
        "Description": "string",
        "Configuration": "string",
        "Version": "integer",
        "ContentType": "integer",
        "Location": "string",
        "FileName": "string",
        "CreatedAt": "2022-04-07T08:10:39Z",
        "ModifiedAt": "2022-04-07T08:10:39Z",
        "UserStatuses": [],
        "Courses": [],
        "Sharing": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.LearningModule": {
      "required": [
        "Configuration"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "description": "Learning Module unique id",
          "type": "string"
        },
        "CourseId": {
          "description": "Id of course that learning module is related to",
          "type": "string"
        },
        "Title": {
          "description": "Learning module title",
          "type": "string"
        },
        "Description": {
          "description": "Learning module description",
          "type": "string"
        },
        "UserStatuses": {
          "description": "List of users progress statuses for this learning module. If current user is learner only their status will be visible",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.LearningModuleUserStatus"
          }
        },
        "Course": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Course",
          "description": "Course entity that learning module is related to"
        },
        "IsPublished": {
          "description": "Is learning module published or not",
          "type": "boolean"
        },
        "Publishing": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.PublishingSettings",
          "description": "Publishing settings"
        },
        "Order": {
          "format": "int32",
          "description": "Order of Learning Module within the course",
          "type": "integer"
        },
        "HasPrerequisite": {
          "description": "Has Learning Module some prerequisite or not",
          "type": "boolean"
        },
        "Configuration": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.LearningModuleConfiguration",
          "description": "Learning Module's configuration"
        }
      },
      "example": {
        "Id": "guid",
        "CourseId": "guid",
        "Title": "string",
        "Description": "string",
        "UserStatuses": [],
        "IsPublished": "boolean",
        "Publishing": {},
        "Order": "integer",
        "HasPrerequisite": "boolean",
        "Configuration": {}
      }
    },
    "Elearningforce.LMS.Api.V2.Models.ExternalApp": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "External App unique id",
          "type": "string"
        },
        "HasPrerequisite": {
          "description": "Has prerequisite",
          "type": "boolean"
        },
        "CourseId": {
          "description": "Id of Course that this external app is related to",
          "type": "string"
        },
        "Title": {
          "description": "External App title",
          "type": "string"
        },
        "Description": {
          "description": "External App description",
          "type": "string"
        },
        "LaunchUrl": {
          "description": "Url of external Tool Provider",
          "type": "string"
        },
        "ConsumerKey": {
          "description": "The consumer key used by the tool",
          "type": "string"
        },
        "Secret": {
          "description": "The secret used by the tool. This value is not filled for GET queries due to security reason",
          "type": "string"
        },
        "CustomFields": {
          "description": "Custom fields that will be sent to the tool provider",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Privacy": {
          "format": "int32",
          "description": "What information to send to the external tool",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "NewWindow": {
          "description": "Determines how the external tool will be opened. True - open in new window, False - open in iframe",
          "type": "boolean"
        },
        "Order": {
          "format": "int32",
          "description": "Order of External App within the course",
          "type": "integer"
        },
        "CreatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "Course": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Course",
          "description": "Course entity that External App is related to"
        },
        "UserStatuses": {
          "description": "List of user progress statuses for this external app",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.ExternalAppUserStatus"
          }
        }
      },
      "example": {
        "Id": "guid",
        "HasPrerequisite": "boolean",
        "CourseId": "guid",
        "Title": "string",
        "Description": "string",
        "LaunchUrl": "string",
        "ConsumerKey": "string",
        "Secret": "string",
        "CustomFields": {},
        "Privacy": "integer",
        "NewWindow": "boolean",
        "Order": "integer",
        "CreatedAt": "2022-04-07T08:10:39Z",
        "UserStatuses": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.SharepointWeb": {
      "type": "object",
      "properties": {
        "SiteId": {
          "description": "SharePoint site collection id",
          "type": "string"
        },
        "Id": {
          "description": "SharePoint site id",
          "type": "string"
        },
        "Url": {
          "description": "SharePoint site url",
          "type": "string"
        },
        "WebTemplateId": {
          "description": "SharePoint web template id",
          "type": "string"
        },
        "LanguageId": {
          "format": "int32",
          "description": "SharePoint web language id",
          "type": "integer"
        },
        "TimeZoneId": {
          "format": "int32",
          "description": "SharePoint web time zone id",
          "type": "integer"
        }
      },
      "example": {
        "SiteId": "guid",
        "Id": "guid",
        "Url": "string",
        "WebTemplateId": "guid",
        "LanguageId": "integer",
        "TimeZoneId": "integer"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.EnrollmentRequests": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Enrollment Request unique id",
          "type": "string"
        },
        "CourseId": {
          "description": "Id of course that enrollment request is related to",
          "type": "string"
        },
        "CourseSessionId": {
          "description": "Id of course session that enrollment request is related to",
          "type": "string"
        },
        "Status": {
          "format": "int32",
          "description": "Enrollment request status\r\n            https://api.365.systems/Documentation/html/types.html#enrollment-request-status",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "UserLoginName": {
          "description": "Login name of user that enrollment request is related to",
          "type": "string"
        },
        "RejectMessage": {
          "description": "Reason why enrollment request was reject or cancelled",
          "type": "string"
        },
        "User": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User",
          "description": "User entity that enrollment request is related to"
        },
        "Course": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Course",
          "description": "Course entity that enrollment request is related to"
        },
        "CourseSession": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CourseSession",
          "description": "Course session entity that enrollment request is related to"
        }
      },
      "example": {
        "Id": "guid",
        "CourseId": "guid",
        "CourseSessionId": "guid",
        "Status": "integer",
        "UserLoginName": "string",
        "RejectMessage": "string",
        "User": {}
      }
    },
    "Elearningforce.LMS.Api.V2.Models.Category": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Category unique id",
          "type": "string"
        },
        "Name": {
          "description": "Category name",
          "type": "string"
        },
        "CourseCatalogId": {
          "description": "Course catalog Id",
          "type": "string"
        },
        "Courses": {
          "description": "Course list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Course"
          }
        },
        "ParentCategory": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CategoryBase",
          "description": "Parent Category"
        },
        "ParentCategoryId": {
          "description": "Parent Category Id",
          "type": "string"
        }
      },
      "example": {
        "Id": "guid",
        "Name": "string",
        "CourseCatalogId": "guid",
        "Courses": [],
        "ParentCategoryId": "guid"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.Tag": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Tag unique id",
          "type": "string"
        },
        "Name": {
          "description": "Tag name",
          "type": "string"
        },
        "CourseCatalogId": {
          "description": "Course catalog Id",
          "type": "string"
        },
        "Courses": {
          "description": "Course list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Course"
          }
        }
      },
      "example": {
        "Id": "guid",
        "Name": "string",
        "CourseCatalogId": "guid",
        "Courses": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.User": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "User unique id",
          "type": "string"
        },
        "Department": {
          "description": "Department",
          "type": "string"
        },
        "LoginName": {
          "description": "User login name",
          "type": "string"
        },
        "Title": {
          "description": "User display name",
          "type": "string"
        },
        "Email": {
          "description": "User email",
          "type": "string"
        },
        "ManagerId": {
          "description": "Id of user's manager",
          "type": "string"
        },
        "ManagerLoginName": {
          "description": "Login of user's manager",
          "type": "string"
        },
        "City": {
          "description": "User's city",
          "type": "string"
        },
        "Country": {
          "description": "User's country",
          "type": "string"
        },
        "Office": {
          "description": "User's office",
          "type": "string"
        },
        "JobTitle": {
          "description": "User's job title",
          "type": "string"
        },
        "Company": {
          "description": "User's company",
          "type": "string"
        },
        "DirectoryObjectId": {
          "description": "Azure object id",
          "type": "string"
        },
        "IsExternal": {
          "description": "Determines if user is external for current tenant",
          "type": "boolean"
        },
        "IsDeleted": {
          "description": "Determines if user is deleted. The user is marked as deleted when his record in Azure AD is deleted or marked as inactive.",
          "type": "boolean"
        },
        "Enrollments": {
          "description": "List of user enrollments. Available only for current user",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Enrollment"
          }
        },
        "EnrollmentRequests": {
          "description": "List of user enrollment requests. Available only for current user",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.EnrollmentRequests"
          }
        },
        "Certificates": {
          "description": "List of user certificates. Available only for current user",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Certificate"
          }
        },
        "Competencies": {
          "description": "List of user competencies. Available only for current user",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.UserCompetency"
          }
        },
        "UserFieldValues": {
          "description": "List of user's field values",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.OData.V2.Models.UserFieldValue"
          }
        }
      },
      "example": {
        "Id": "guid",
        "Department": "string",
        "LoginName": "string",
        "Title": "string",
        "Email": "string",
        "ManagerId": "guid",
        "ManagerLoginName": "string",
        "City": "string",
        "Country": "string",
        "Office": "string",
        "JobTitle": "string",
        "Company": "string",
        "DirectoryObjectId": "guid",
        "IsExternal": "boolean",
        "IsDeleted": "boolean",
        "Enrollments": [],
        "EnrollmentRequests": [],
        "Certificates": [],
        "Competencies": [],
        "UserFieldValues": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.CourseSession": {
      "required": [
        "StartDate",
        "EndDate",
        "TimeZone"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "description": "Course session unique id",
          "type": "string"
        },
        "CourseId": {
          "description": "Id of Course that course session is related to",
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "description": "Date and time when course session starts",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "description": "Date and time when course session ends",
          "type": "string"
        },
        "TimeZone": {
          "description": "Time zone used in course session's StartDate and EndDate",
          "type": "string"
        },
        "TimeZoneName": {
          "description": "Time zone display name",
          "type": "string"
        },
        "StartDateTimeZoneOffset": {
          "format": "double",
          "description": "Time zone off set for start date",
          "type": "number"
        },
        "EndDateTimeZoneOffset": {
          "format": "double",
          "description": "Time zone off set for end date",
          "type": "number"
        },
        "StartDateLocal": {
          "description": "Date and time when course session starts in course session's timezone",
          "type": "string"
        },
        "EndDateLocal": {
          "description": "Date and time when course session ends in course session's timezone",
          "type": "string"
        },
        "Room": {
          "$ref": "#/definitions/Elearningforce.LMS.Common.Rooms.Room",
          "description": "Room associated with course session when course type 'Classroom'"
        },
        "IsTeamsOnlineMeeting": {
          "type": "boolean"
        },
        "MeetingUrl": {
          "description": "Course session's meeting url",
          "type": "string"
        },
        "MaxAttendees": {
          "format": "int32",
          "description": "Number of maximum attendees allowed",
          "type": "integer"
        },
        "AllowLearnerToSetAttendance": {
          "description": "Option for learner to set attendance by his own",
          "type": "boolean"
        },
        "IsSignatureRequired": {
          "description": "E-signature required to set attendance",
          "type": "boolean"
        },
        "IsQrCodeRequired": {
          "description": "Qr code required to set attendance",
          "type": "boolean"
        },
        "AttendanceStartDate": {
          "format": "date-time",
          "description": "Start Date and time when learner can set attendance",
          "type": "string"
        },
        "AttendanceStartDateLocal": {
          "description": "Start Date and time when learner can set attendance in course session's timezone",
          "type": "string"
        },
        "AttendanceEndDate": {
          "format": "date-time",
          "description": "End Date and time when learner can set attendance",
          "type": "string"
        },
        "AttendanceEndDateLocal": {
          "description": "End Date and time when learner can set attendance in course session's timezone",
          "type": "string"
        },
        "TakenSeatsCount": {
          "format": "int32",
          "description": "Count of users that enrolled to the session",
          "type": "integer"
        },
        "Description": {
          "description": "Session description",
          "type": "string"
        },
        "Cost": {
          "format": "double",
          "description": "Session сost",
          "type": "number"
        },
        "EnrollmentDeadline": {
          "format": "date-time",
          "description": "Deadline for enrollment to single session",
          "type": "string"
        },
        "EnrollmentDeadlineLocal": {
          "description": "Deadline for enrollment to single session in course session's timezone",
          "type": "string"
        },
        "Course": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Course",
          "description": "Course that course session is related to"
        },
        "Enrollments": {
          "description": "List of enrollments associated with course session",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Enrollment"
          }
        },
        "Instructors": {
          "description": "List of instructors associated with course session",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User"
          }
        }
      },
      "example": {
        "Id": "guid",
        "CourseId": "guid",
        "StartDate": "2022-04-07T08:10:39Z",
        "EndDate": "2022-04-07T08:10:39Z",
        "TimeZone": "string",
        "TimeZoneName": "string",
        "StartDateTimeZoneOffset": "number",
        "EndDateTimeZoneOffset": "number",
        "StartDateLocal": "string",
        "EndDateLocal": "string",
        "Room": {},
        "IsTeamsOnlineMeeting": "boolean",
        "MeetingUrl": "string",
        "MaxAttendees": "integer",
        "AllowLearnerToSetAttendance": "boolean",
        "IsSignatureRequired": "boolean",
        "IsQrCodeRequired": "boolean",
        "AttendanceStartDate": "2022-04-07T08:10:39Z",
        "AttendanceStartDateLocal": "string",
        "AttendanceEndDate": "2022-04-07T08:10:39Z",
        "AttendanceEndDateLocal": "string",
        "TakenSeatsCount": "integer",
        "Description": "string",
        "Cost": "number",
        "EnrollmentDeadline": "2022-04-07T08:10:39Z",
        "EnrollmentDeadlineLocal": "string",
        "Enrollments": [],
        "Instructors": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.LearningItemWrapper": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Learning item id",
          "type": "string"
        },
        "Title": {
          "description": "Learning item title",
          "type": "string"
        },
        "Description": {
          "description": "Learning module description",
          "type": "string"
        },
        "AppType": {
          "format": "int32",
          "description": "Learning item type",
          "enum": [
            1,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "Position": {
          "format": "int32",
          "type": "integer"
        },
        "IsDeleted": {
          "type": "boolean"
        },
        "IsPublished": {
          "type": "boolean"
        },
        "Configuration": {
          "type": "string"
        },
        "HasPrerequisite": {
          "type": "boolean"
        }
      },
      "example": {
        "Id": "guid",
        "Title": "string",
        "Description": "string",
        "AppType": "integer",
        "Position": "integer",
        "IsDeleted": "boolean",
        "IsPublished": "boolean",
        "Configuration": "string",
        "HasPrerequisite": "boolean"
      }
    },
    "Elearningforce.LMS.Api.OData.V2.Models.CourseSessionRequest": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Course session request unique id",
          "type": "string"
        },
        "CourseId": {
          "description": "Id of Course that course session request is related to",
          "type": "string"
        },
        "Note": {
          "description": "Text message that attached to the request",
          "type": "string"
        },
        "Course": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Course",
          "description": "Course that course session request is related to"
        },
        "CreatedAt": {
          "format": "date-time",
          "description": "Date and Time of creation request",
          "type": "string"
        },
        "CreatedBy": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User",
          "description": "User who created request"
        }
      },
      "example": {
        "Id": "guid",
        "CourseId": "guid",
        "Note": "string",
        "CreatedAt": "2022-04-07T08:10:39Z"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.CourseAverageRating": {
      "type": "object",
      "properties": {
        "CourseId": {
          "type": "string"
        },
        "Rating": {
          "format": "decimal",
          "type": "number"
        },
        "Count": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "CourseId": "guid",
        "Rating": "number",
        "Count": "integer"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.DueDateSettings": {
      "type": "object",
      "properties": {
        "CourseId": {
          "type": "string"
        },
        "IsEnabled": {
          "type": "boolean"
        },
        "FixedDate": {
          "format": "date-time",
          "type": "string"
        },
        "DaysAfterEnrollment": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "CourseId": "guid",
        "IsEnabled": "boolean",
        "FixedDate": "2022-04-07T08:10:39Z",
        "DaysAfterEnrollment": "integer"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.PublishingSettings": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "IsEnabled": {
          "type": "boolean"
        },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "type": "string"
        }
      },
      "example": {
        "Id": "guid",
        "IsEnabled": "boolean",
        "StartDate": "2022-04-07T08:10:39Z",
        "EndDate": "2022-04-07T08:10:39Z"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.CourseProvisioningStatus": {
      "type": "object",
      "properties": {
        "CourseId": {
          "type": "string"
        },
        "Status": {
          "format": "int32",
          "description": "Course Provisioning Status\r\n            https://api.365.systems/Documentation/html/types.html#course-provisioning-status",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer"
        },
        "FailureDetailsJson": {
          "type": "string"
        },
        "ChangesContextJson": {
          "type": "string"
        },
        "ProgressDetailsJson": {
          "type": "string"
        },
        "CreatedAt": {
          "format": "date-time",
          "description": "Date when course was created",
          "type": "string"
        },
        "ModifiedAt": {
          "format": "date-time",
          "type": "string"
        }
      },
      "example": {
        "CourseId": "guid",
        "Status": "integer",
        "FailureDetailsJson": "string",
        "ChangesContextJson": "string",
        "ProgressDetailsJson": "string",
        "CreatedAt": "2022-04-07T08:10:39Z",
        "ModifiedAt": "2022-04-07T08:10:39Z"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.CompetencyLevel": {
      "type": "object",
      "properties": {
        "CompetencyId": {
          "description": "Competency unique id",
          "type": "string"
        },
        "LevelId": {
          "description": "Competency sacle set level unique id",
          "type": "string"
        },
        "Competency": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Competency"
        },
        "Level": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CompetencyScaleSetLevel"
        }
      },
      "example": {
        "CompetencyId": "guid",
        "LevelId": "guid"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.CompetencyRevocationSettings": {
      "type": "object",
      "properties": {
        "CourseId": {
          "type": "string"
        },
        "IsEnabled": {
          "type": "boolean"
        },
        "FixedDate": {
          "format": "date-time",
          "type": "string"
        },
        "DaysAfterCompletion": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "CourseId": "guid",
        "IsEnabled": "boolean",
        "FixedDate": "2022-04-07T08:10:39Z",
        "DaysAfterCompletion": "integer"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.CourseCompletionOptions": {
      "type": "object",
      "properties": {
        "CompletionCriteria": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            9,
            10
          ],
          "type": "integer"
        },
        "OptionsJson": {
          "type": "string"
        }
      },
      "example": {
        "CompletionCriteria": "integer",
        "OptionsJson": "string"
      }
    },
    "Elearningforce.LMS.Api.OData.V2.Models.CourseCompletionSet": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Course completion set id",
          "type": "string"
        },
        "CourseId": {
          "description": "Course id",
          "type": "string"
        },
        "IsDefault": {
          "description": "Is default course completion set or not",
          "type": "boolean"
        },
        "Title": {
          "description": "Course completion title",
          "type": "string"
        },
        "Options": {
          "description": "Course completion options",
          "type": "string"
        }
      },
      "example": {
        "Id": "guid",
        "CourseId": "guid",
        "IsDefault": "boolean",
        "Title": "string",
        "Options": "string"
      }
    },
    "Elearningforce.LMS.Api.Internal.Models.TimeZone": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "BaseUtcOffset": {
          "type": "string"
        },
        "StandardName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      },
      "example": {
        "Id": "guid",
        "BaseUtcOffset": "string",
        "StandardName": "string",
        "DisplayName": "string"
      }
    },
    "Elearningforce.LMS.Common.Grading.Scale": {
      "type": "object",
      "properties": {
        "<Title>k__BackingField": {
          "type": "string"
        },
        "<Value>k__BackingField": {
          "format": "decimal",
          "type": "number"
        }
      },
      "example": {
        "<Title>k__BackingField": "string",
        "<Value>k__BackingField": "number"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.Certificate": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Certificate unique id",
          "type": "string"
        },
        "CourseId": {
          "description": "Id of course that this certificate is related to",
          "type": "string"
        },
        "ContentUrl": {
          "description": "Url where certificate can be downloaded",
          "type": "string"
        },
        "IsGenerated": {
          "description": "Is certificate already generated or not yet",
          "type": "boolean"
        },
        "Status": {
          "format": "int32",
          "description": "Certificate status\r\n            https://api.365.systems/Documentation/html/types.html#certificate-status",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "Issued": {
          "format": "date-time",
          "description": "Certificate issued date",
          "type": "string"
        },
        "Expiry": {
          "format": "date-time",
          "description": "Certificate expiry date",
          "type": "string"
        },
        "TemplateId": {
          "description": "Id of certificate template",
          "type": "string"
        },
        "UserId": {
          "description": "Id of user that certificate is related to",
          "type": "string"
        },
        "UserLoginName": {
          "description": "Login name of user that certificate is related to",
          "type": "string"
        },
        "User": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User",
          "description": "User entity that certificate is related to"
        },
        "Course": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Course",
          "description": "Course entity that certificate is related to"
        }
      },
      "example": {
        "Id": "guid",
        "CourseId": "guid",
        "ContentUrl": "string",
        "IsGenerated": "boolean",
        "Status": "integer",
        "Issued": "2022-04-07T08:10:39Z",
        "Expiry": "2022-04-07T08:10:39Z",
        "TemplateId": "guid",
        "UserId": "guid",
        "UserLoginName": "string"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.QuizUserStatus": {
      "type": "object",
      "properties": {
        "QuizId": {
          "description": "Id of quiz that status is related to",
          "type": "string"
        },
        "EnrollmentId": {
          "description": "Id of enrollment that status is related to",
          "type": "string"
        },
        "AttemptsCount": {
          "format": "int32",
          "description": "Number of attempts that was done by user",
          "type": "integer"
        },
        "Status": {
          "format": "int32",
          "description": "Status\r\n            https://api.365.systems/Documentation/html/types.html#quiz-user-status",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "Progress": {
          "format": "decimal",
          "description": "Percentage of quiz completion",
          "type": "number"
        },
        "AttemptId": {
          "description": "Id of last attempt",
          "type": "string"
        },
        "Quiz": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Quiz",
          "description": "Quiz entity that status is related to"
        },
        "Enrollment": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Enrollment",
          "description": "Enrollment entity that status is related to"
        },
        "Attempt": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.QuizAttempt",
          "description": "Last attempt"
        }
      },
      "example": {
        "QuizId": "guid",
        "EnrollmentId": "guid",
        "AttemptsCount": "integer",
        "Status": "integer",
        "Progress": "number",
        "AttemptId": "guid"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.ScormUserStatus": {
      "type": "object",
      "properties": {
        "ScormId": {
          "description": "Id of scorm that status is related to",
          "type": "string"
        },
        "EnrollmentId": {
          "description": "Id of enrollment that status is related to",
          "type": "string"
        },
        "Points": {
          "format": "int32",
          "description": "Points returned from Scorm package",
          "type": "integer"
        },
        "Scale": {
          "format": "float",
          "description": "Scale returned from Scorm package",
          "type": "number"
        },
        "Status": {
          "format": "int32",
          "description": "Status\r\n            https://api.365.systems/Documentation/html/types.html#scorm-user-status",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "Progress": {
          "format": "decimal",
          "description": "Progress returned from Scorm package",
          "type": "number"
        },
        "AttemptsCount": {
          "format": "int32",
          "description": "Number of attempts that was done by user",
          "type": "integer"
        },
        "AttemptId": {
          "description": "Id of last attempt",
          "type": "string"
        },
        "ModifiedAt": {
          "format": "date-time",
          "description": "DateTime of last attempt",
          "type": "string"
        },
        "Scorm": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Scorm",
          "description": "Scorm entity that status is related to"
        },
        "Enrollment": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Enrollment",
          "description": "Enrollment entity that status is related to"
        },
        "Attempt": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.ScormAttempt",
          "description": "Last attempt"
        }
      },
      "example": {
        "ScormId": "guid",
        "EnrollmentId": "guid",
        "Points": "integer",
        "Scale": "number",
        "Status": "integer",
        "Progress": "number",
        "AttemptsCount": "integer",
        "AttemptId": "guid",
        "ModifiedAt": "2022-04-07T08:10:39Z"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.LearningModuleUserStatus": {
      "type": "object",
      "properties": {
        "LearningModuleId": {
          "description": "Id of learning module that status is related to",
          "type": "string"
        },
        "EnrollmentId": {
          "description": "Id of enrollment that status is related to",
          "type": "string"
        },
        "AttemptsCount": {
          "format": "int32",
          "description": "Number of attempts that was done by user",
          "type": "integer"
        },
        "Status": {
          "format": "int32",
          "description": "Status\r\n            https://api.365.systems/Documentation/html/types.html#learning-module-user-status",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "PercentOfCompleting": {
          "format": "int32",
          "description": "Percentage of learning module completion",
          "type": "integer"
        },
        "AttemptId": {
          "description": "Id of last attempt",
          "type": "string"
        },
        "LearningModule": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.LearningModule",
          "description": "Learning module entity that status is related to"
        },
        "Enrollment": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Enrollment",
          "description": "Enrollment entity that status is related to"
        },
        "Attempt": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.LearningModuleAttempt",
          "description": "Last attempt"
        }
      },
      "example": {
        "LearningModuleId": "guid",
        "EnrollmentId": "guid",
        "AttemptsCount": "integer",
        "Status": "integer",
        "PercentOfCompleting": "integer",
        "AttemptId": "guid"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.ExternalAppUserStatus": {
      "type": "object",
      "properties": {
        "ExternalAppId": {
          "type": "string"
        },
        "EnrollmentId": {
          "type": "string"
        },
        "Status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "AttemptId": {
          "type": "string"
        },
        "ModifiedAt": {
          "format": "date-time",
          "type": "string"
        },
        "Attempt": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.ExternalAppAttempt"
        },
        "ExternalApp": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.ExternalApp"
        },
        "Enrollment": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Enrollment"
        }
      },
      "example": {
        "ExternalAppId": "guid",
        "EnrollmentId": "guid",
        "Status": "integer",
        "AttemptId": "guid",
        "ModifiedAt": "2022-04-07T08:10:39Z"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.Attendance": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Attendance Id",
          "type": "string"
        },
        "EnrollmentId": {
          "description": "Enrollment Id",
          "type": "string"
        },
        "CourseSessionId": {
          "description": "Session Id",
          "type": "string"
        },
        "Percent": {
          "format": "int32",
          "description": "Percent",
          "type": "integer"
        }
      },
      "example": {
        "Id": "guid",
        "EnrollmentId": "guid",
        "CourseSessionId": "guid",
        "Percent": "integer"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.QuestionPool": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Question pool unique id",
          "type": "string"
        },
        "Title": {
          "description": "Question pool title",
          "type": "string"
        },
        "Description": {
          "description": "Question pool description",
          "type": "string"
        },
        "Questions": {
          "description": "Question pool questions configuration\r\n            https://api.365.systems/Documentation/html/types.html#quiz-questions",
          "type": "string"
        },
        "ModifiedAt": {
          "format": "date-time",
          "description": "When question pool was modified last time",
          "type": "string"
        },
        "CreatedAt": {
          "format": "date-time",
          "description": "When question pool was created",
          "type": "string"
        },
        "CreatedBy": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User",
          "description": "Question pool creator"
        },
        "Categories": {
          "description": "List of categories",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.QuestionPoolCategory"
          }
        },
        "Quizzes": {
          "description": "List of quizzes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Quiz"
          }
        },
        "Managers": {
          "description": "List of question pool managers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User"
          }
        }
      },
      "example": {
        "Id": "guid",
        "Title": "string",
        "Description": "string",
        "Questions": "string",
        "ModifiedAt": "2022-04-07T08:10:39Z",
        "CreatedAt": "2022-04-07T08:10:39Z",
        "Categories": [],
        "Quizzes": [],
        "Managers": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.QuizSharing": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "QuizId": {
          "type": "string"
        },
        "CourseCatalogId": {
          "type": "string"
        },
        "CourseId": {
          "type": "string"
        }
      },
      "example": {
        "Id": "guid",
        "QuizId": "guid",
        "CourseCatalogId": "guid",
        "CourseId": "guid"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.ScormSharing": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "AccessType": {
          "format": "int32",
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "SharingType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "EntityId": {
          "type": "string"
        },
        "EntityTitle": {
          "type": "string"
        }
      },
      "example": {
        "Id": "guid",
        "AccessType": "integer",
        "SharingType": "integer",
        "EntityId": "guid",
        "EntityTitle": "string"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.LearningModuleConfiguration": {
      "type": "object",
      "properties": {
        "LearningModuleId": {
          "type": "string"
        },
        "Items": {
          "description": "JSON string with array of LM items\r\n            https://api.365.systems/Documentation/html/types.html#learning-module-configuration",
          "type": "string"
        }
      },
      "example": {
        "LearningModuleId": "guid",
        "Items": "string"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.CategoryBase": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Category unique id",
          "type": "string"
        },
        "Name": {
          "description": "Category name",
          "type": "string"
        },
        "CourseCatalogId": {
          "description": "Course catalog Id",
          "type": "string"
        },
        "Courses": {
          "description": "Course list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Course"
          }
        }
      },
      "example": {
        "Id": "guid",
        "Name": "string",
        "CourseCatalogId": "guid",
        "Courses": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.UserCompetency": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Competency unique id",
          "type": "string"
        },
        "User": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User",
          "description": "User entity that certificate is related to"
        },
        "UserId": {
          "description": "Id of user that certificate is related to",
          "type": "string"
        },
        "Competency": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Competency",
          "description": "Competency is related to"
        },
        "CompetencyId": {
          "description": "Id of competency is related to",
          "type": "string"
        },
        "Level": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CompetencyScaleSetLevel",
          "description": "Competency level is related to"
        },
        "LevelId": {
          "description": "Id of competency level is related to",
          "type": "string"
        },
        "Status": {
          "format": "int32",
          "description": "Status of competency",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "ExpiryDate": {
          "format": "date-time",
          "description": "Competency expiry date",
          "type": "string"
        },
        "ModifiedAt": {
          "format": "date-time",
          "description": "Revocation Date",
          "type": "string"
        },
        "ModifiedByUserId": {
          "description": "User id that revocation is related to",
          "type": "string"
        },
        "ModifiedBy": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User",
          "description": "User entity that revocation is related to"
        },
        "CreatedAt": {
          "format": "date-time",
          "description": "Achievement Date",
          "type": "string"
        },
        "CreatedByUserId": {
          "description": "User id that achievement is related to",
          "type": "string"
        },
        "CreatedBy": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User",
          "description": "User entity that achievement is related to"
        },
        "EnrollmentId": {
          "description": "Id of enrollment is related to",
          "type": "string"
        },
        "Enrollment": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Enrollment",
          "description": "Enrollment is related to"
        }
      },
      "example": {
        "Id": "guid",
        "UserId": "guid",
        "CompetencyId": "guid",
        "LevelId": "guid",
        "Status": "integer",
        "ExpiryDate": "2022-04-07T08:10:39Z",
        "ModifiedAt": "2022-04-07T08:10:39Z",
        "ModifiedByUserId": "guid",
        "CreatedAt": "2022-04-07T08:10:39Z",
        "CreatedByUserId": "guid",
        "EnrollmentId": "guid"
      }
    },
    "Elearningforce.LMS.Api.OData.V2.Models.UserFieldValue": {
      "type": "object",
      "properties": {
        "UserId": {
          "description": "User id",
          "type": "string"
        },
        "FieldId": {
          "description": "User field id",
          "type": "string"
        },
        "User": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User",
          "description": "User for whom user field value was assigned"
        }
      },
      "example": {
        "UserId": "guid",
        "FieldId": "guid",
        "Value": "{}"
      }
    },
    "Elearningforce.LMS.Common.Rooms.Room": {
      "type": "object",
      "properties": {
        "EmailAddress": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Location": {
          "type": "string"
        },
        "Source": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        }
      },
      "example": {
        "EmailAddress": "string",
        "Title": "string",
        "Location": "string",
        "Source": "integer"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.Competency": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Competency unique id",
          "type": "string"
        },
        "CourseCatalogId": {
          "description": "Course catalog id",
          "type": "string"
        },
        "Title": {
          "description": "Competency title",
          "type": "string"
        },
        "ScaleSetId": {
          "description": "Competency scale set id",
          "type": "string"
        },
        "ScaleSet": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CompetencyScaleSet",
          "description": "Competency scale set"
        },
        "Categories": {
          "description": "Competency categories",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CompetencyCategory"
          }
        },
        "Tags": {
          "description": "Competency tags",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CompetencyTag"
          }
        },
        "Courses": {
          "description": "Courses where the Competency is used in",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Course"
          }
        },
        "IsInUse": {
          "description": "Shows if the competency is used in either a Course or assigned to a User",
          "type": "boolean"
        }
      },
      "example": {
        "Id": "guid",
        "CourseCatalogId": "guid",
        "Title": "string",
        "ScaleSetId": "guid",
        "Categories": [],
        "Tags": [],
        "Courses": [],
        "IsInUse": "boolean"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.CompetencyScaleSetLevel": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Competency level unique id",
          "type": "string"
        },
        "Title": {
          "description": "Competency level title",
          "type": "string"
        },
        "Value": {
          "format": "int32",
          "description": "Competency level value",
          "type": "integer"
        },
        "ScaleSetId": {
          "description": "Competency scale set id",
          "type": "string"
        },
        "IsInUse": {
          "description": "Shows wether the Level is assigned to a Course or a User",
          "type": "boolean"
        }
      },
      "example": {
        "Id": "guid",
        "Title": "string",
        "Value": "integer",
        "ScaleSetId": "guid",
        "IsInUse": "boolean"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.QuizAttempt": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "EnrollmentId": {
          "type": "string"
        },
        "QuizId": {
          "type": "string"
        },
        "CurrentQuestionId": {
          "type": "string"
        },
        "State": {
          "description": "JSON string with attempt state\r\n            https://api.365.systems/Documentation/html/types.html#quiz-attempt-state",
          "type": "string"
        },
        "Score": {
          "format": "double",
          "type": "number"
        },
        "MaxScore": {
          "format": "int32",
          "type": "integer"
        },
        "PassingTimeTicks": {
          "format": "int64",
          "type": "integer"
        },
        "LeftTimeInSeconds": {
          "format": "int32",
          "type": "integer"
        },
        "IsCompleted": {
          "type": "boolean"
        },
        "IsCompletedCorrectly": {
          "type": "boolean"
        },
        "IsTimedOut": {
          "type": "boolean"
        },
        "PassingPercentage": {
          "format": "int32",
          "type": "integer"
        },
        "Status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "Progress": {
          "format": "double",
          "type": "number"
        },
        "CreatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "ModifiedAt": {
          "format": "date-time",
          "type": "string"
        }
      },
      "example": {
        "Id": "guid",
        "EnrollmentId": "guid",
        "QuizId": "guid",
        "CurrentQuestionId": "guid",
        "State": "string",
        "Score": "number",
        "MaxScore": "integer",
        "PassingTimeTicks": "integer",
        "LeftTimeInSeconds": "integer",
        "IsCompleted": "boolean",
        "IsCompletedCorrectly": "boolean",
        "IsTimedOut": "boolean",
        "PassingPercentage": "integer",
        "Status": "integer",
        "Progress": "number",
        "CreatedAt": "2022-04-07T08:10:39Z",
        "ModifiedAt": "2022-04-07T08:10:39Z"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.ScormAttempt": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "ScormId": {
          "type": "string"
        },
        "EnrollmentId": {
          "type": "string"
        },
        "CompletionStatus": {
          "type": "boolean"
        },
        "SuccessStatus": {
          "type": "boolean"
        },
        "Points": {
          "format": "int32",
          "type": "integer"
        },
        "Scale": {
          "format": "float",
          "type": "number"
        },
        "Progress": {
          "format": "float",
          "type": "number"
        },
        "AlternateProgress": {
          "format": "float",
          "type": "number"
        },
        "Version": {
          "format": "int32",
          "type": "integer"
        },
        "CreatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "ModifiedAt": {
          "format": "date-time",
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "StateDetails": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.ScormAttemptState"
        },
        "Scorm": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Scorm"
        },
        "Enrollment": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Enrollment"
        }
      },
      "example": {
        "Id": "guid",
        "ScormId": "guid",
        "EnrollmentId": "guid",
        "CompletionStatus": "boolean",
        "SuccessStatus": "boolean",
        "Points": "integer",
        "Scale": "number",
        "Progress": "number",
        "AlternateProgress": "number",
        "Version": "integer",
        "CreatedAt": "2022-04-07T08:10:39Z",
        "ModifiedAt": "2022-04-07T08:10:39Z",
        "State": "string",
        "StateDetails": {}
      }
    },
    "Elearningforce.LMS.Api.V2.Models.LearningModuleAttempt": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "LearningModuleId": {
          "type": "string"
        },
        "EnrollmentId": {
          "type": "string"
        },
        "PercentOfCompleting": {
          "format": "int32",
          "type": "integer"
        },
        "IsCompleted": {
          "type": "boolean"
        },
        "IsCompletedCorrectly": {
          "type": "boolean"
        },
        "PassingTimeTicks": {
          "format": "int64",
          "type": "integer"
        },
        "Status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "State": {
          "description": "JSON string with attempt state\r\n            https://api.365.systems/Documentation/html/types.html#learning-module-attempt-state",
          "type": "string"
        },
        "LearningModule": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.LearningModule"
        },
        "Enrollment": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Enrollment"
        }
      },
      "example": {
        "Id": "guid",
        "LearningModuleId": "guid",
        "EnrollmentId": "guid",
        "PercentOfCompleting": "integer",
        "IsCompleted": "boolean",
        "IsCompletedCorrectly": "boolean",
        "PassingTimeTicks": "integer",
        "Status": "integer",
        "State": "string"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.ExternalAppAttempt": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "ExternalAppId": {
          "type": "string"
        },
        "EnrollmentId": {
          "type": "string"
        },
        "Grade": {
          "format": "double",
          "type": "number"
        },
        "ExternalApp": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.ExternalApp"
        },
        "Enrollment": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Enrollment"
        }
      },
      "example": {
        "Id": "guid",
        "ExternalAppId": "guid",
        "EnrollmentId": "guid",
        "Grade": "number"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.QuestionPoolCategory": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Category unique id",
          "type": "string"
        },
        "Name": {
          "description": "Category name",
          "type": "string"
        },
        "QuestionPools": {
          "description": "List of Question Pools where this category is used",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.QuestionPool"
          }
        }
      },
      "example": {
        "Id": "guid",
        "Name": "string",
        "QuestionPools": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.CompetencyScaleSet": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Competency scale set unique id",
          "type": "string"
        },
        "Title": {
          "description": "Competency scale set title",
          "type": "string"
        },
        "IsDefault": {
          "description": "Default scale set or not",
          "type": "boolean"
        },
        "CourseCatalogId": {
          "description": "Course catalog id",
          "type": "string"
        },
        "Levels": {
          "description": "Competency scale set levels",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CompetencyScaleSetLevel"
          }
        },
        "Competencies": {
          "description": "Competencies where the Scale Set is used",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Competency"
          }
        }
      },
      "example": {
        "Id": "guid",
        "Title": "string",
        "IsDefault": "boolean",
        "CourseCatalogId": "guid",
        "Levels": [],
        "Competencies": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.CompetencyCategory": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Category unique id",
          "type": "string"
        },
        "Name": {
          "description": "Category name",
          "type": "string"
        },
        "CourseCatalogId": {
          "description": "Course catalog id",
          "type": "string"
        },
        "Competencies": {
          "description": "Competency list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Competency"
          }
        },
        "ParentCategory": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CompetencyCategoryBase",
          "description": "Parent сategory"
        },
        "ParentCategoryId": {
          "description": "Parent category id",
          "type": "string"
        }
      },
      "example": {
        "Id": "guid",
        "Name": "string",
        "CourseCatalogId": "guid",
        "Competencies": [],
        "ParentCategoryId": "guid"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.CompetencyTag": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Tag unique id",
          "type": "string"
        },
        "Name": {
          "description": "Tag name",
          "type": "string"
        },
        "CourseCatalogId": {
          "description": "Course catalog Id",
          "type": "string"
        },
        "Competencies": {
          "description": "Competency list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Competency"
          }
        }
      },
      "example": {
        "Id": "guid",
        "Name": "string",
        "CourseCatalogId": "guid",
        "Competencies": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.ScormAttemptState": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "State": {
          "type": "string"
        }
      },
      "example": {
        "Id": "guid",
        "State": "string"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.CompetencyCategoryBase": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Category unique id",
          "type": "string"
        },
        "Name": {
          "description": "Category name",
          "type": "string"
        },
        "CourseCatalogId": {
          "description": "Course catalog id",
          "type": "string"
        },
        "Competencies": {
          "description": "Competency list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Competency"
          }
        }
      },
      "example": {
        "Id": "guid",
        "Name": "string",
        "CourseCatalogId": "guid",
        "Competencies": []
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.Assignment]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Certificate]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Certificate"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.Certificate]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.CertificateTemplate]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CertificateTemplate"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.CertificateTemplate": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "IsDeleted": {
          "type": "boolean"
        },
        "CertificateType": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "ContentUrl": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "AreasConfig": {
          "type": "string"
        },
        "InUse": {
          "type": "boolean"
        }
      },
      "example": {
        "Id": "guid",
        "IsDeleted": "boolean",
        "CertificateType": "integer",
        "ContentUrl": "string",
        "Title": "string",
        "Description": "string",
        "AreasConfig": "string",
        "InUse": "boolean"
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.CertificateTemplate]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.Competency]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Competency]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Competency"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.CompetencyCategory]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.CompetencyCategory]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CompetencyCategory"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.CompetencyScaleSet]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.CompetencyScaleSet]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CompetencyScaleSet"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.CompetencyTag]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.CompetencyTag]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CompetencyTag"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.CourseCatalog]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.CourseCatalog]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CourseCatalog"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.CourseCatalogCreationParameters": {
      "type": "object",
      "properties": {
        "NewCatalogWeb": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.NewWeb"
        },
        "SharepointAccessToken": {
          "type": "string"
        },
        "SharepointAdminSiteAccessToken": {
          "type": "string"
        },
        "Owners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CatalogOwner"
          }
        },
        "Title": {
          "type": "string"
        },
        "Url": {
          "type": "string"
        }
      },
      "example": {
        "NewCatalogWeb": {},
        "SharepointAccessToken": "string",
        "SharepointAdminSiteAccessToken": "string",
        "Owners": [],
        "Title": "string",
        "Url": "string"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.NewWeb": {
      "type": "object",
      "properties": {
        "Title": {
          "type": "string"
        },
        "RelativePath": {
          "type": "string"
        },
        "SiteTemplate": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "LanguageId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "example": {
        "Title": "string",
        "RelativePath": "string",
        "SiteTemplate": "integer",
        "LanguageId": "integer"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.CatalogOwner": {
      "type": "object",
      "properties": {
        "Login": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "DirectoryObjectId": {
          "type": "string"
        }
      },
      "example": {
        "Login": "string",
        "Name": "string",
        "DirectoryObjectId": "guid"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.CourseCatalogOwnersParameters": {
      "required": [
        "Owners"
      ],
      "type": "object",
      "properties": {
        "Owners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CatalogOwner"
          }
        }
      },
      "example": {
        "Owners": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.CourseCatalogUpdateParameters": {
      "type": "object",
      "properties": {
        "Owners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CatalogOwner"
          }
        },
        "Title": {
          "type": "string"
        },
        "Url": {
          "type": "string"
        }
      },
      "example": {
        "Owners": [],
        "Title": "string",
        "Url": "string"
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.Category]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Category]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Category"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.OData.V2.Models.CourseCompletionSet]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.OData.V2.Models.CourseCompletionSet]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.OData.V2.Models.CourseCompletionSet"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.CourseLayout]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CourseLayout"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.CourseLayout": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Course layout unique id",
          "type": "string"
        },
        "CourseCatalogId": {
          "description": "Id of Course catalog that course layout related to",
          "type": "string"
        },
        "Type": {
          "format": "int32",
          "description": "Course layout type",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "CourseType": {
          "format": "int32",
          "description": "Course type",
          "enum": [
            0,
            1,
            3,
            4,
            5
          ],
          "type": "integer"
        },
        "Title": {
          "description": "Course layout title",
          "type": "string"
        },
        "Layout": {
          "description": "Course layout html",
          "type": "string"
        }
      },
      "example": {
        "Id": "guid",
        "CourseCatalogId": "guid",
        "Type": "integer",
        "CourseType": "integer",
        "Title": "string",
        "Layout": "string"
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.CourseLayout]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Course]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Course"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.CourseCreationParameters": {
      "required": [
        "CourseCatalogId",
        "UICulture",
        "Title",
        "Description"
      ],
      "type": "object",
      "properties": {
        "CourseCatalogId": {
          "type": "string"
        },
        "SiteTemplate": {
          "type": "string"
        },
        "AutoResolveUrlConflict": {
          "type": "boolean"
        },
        "UICulture": {
          "type": "string"
        },
        "Culture": {
          "type": "string"
        },
        "FailedCourseId": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "CourseType": {
          "format": "int32",
          "enum": [
            0,
            1,
            3,
            4,
            5
          ],
          "type": "integer"
        },
        "Categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Common.CourseCatalogs.CreationArguments.Category"
          }
        },
        "Tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Common.CourseCatalogs.CreationArguments.Tag"
          }
        },
        "CourseLayoutId": {
          "type": "string"
        },
        "CourseSessionEnrollmentType": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "TeacherLogins": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "TrainerLogins": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "VisitorLogins": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CertificateTemplateId": {
          "type": "string"
        },
        "CourseID": {
          "type": "string"
        },
        "Duration": {
          "type": "string"
        },
        "LongDescription": {
          "type": "string"
        },
        "PublishingSettings": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.PublishingSettings"
        },
        "ExpirySettings": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CertificateExpirySettings"
        },
        "DueDateSettings": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.DueDateSettings"
        },
        "ShowInCatalog": {
          "type": "boolean"
        },
        "CEU": {
          "format": "double",
          "type": "number"
        },
        "ImageUrl": {
          "type": "string"
        },
        "BannerImageUrl": {
          "type": "string"
        },
        "EnrollmentFlow": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "Competencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CompetencyLevel"
          }
        },
        "CompetencyRevocation": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CompetencyRevocationSettings"
        },
        "CourseTargeting": {
          "type": "boolean"
        },
        "UnenrollDisabled": {
          "type": "boolean"
        },
        "WaitingListEnabled": {
          "type": "boolean"
        },
        "IsRequired": {
          "type": "boolean"
        },
        "MaxAttendees": {
          "format": "int32",
          "type": "integer"
        },
        "SessionRequestsEnabled": {
          "type": "boolean"
        },
        "IsRetakeAllowed": {
          "type": "boolean"
        },
        "EnrollmentDeadline": {
          "format": "date-time",
          "type": "string"
        },
        "Url": {
          "type": "string"
        }
      },
      "example": {
        "CourseCatalogId": "guid",
        "SiteTemplate": "string",
        "AutoResolveUrlConflict": "boolean",
        "UICulture": "string",
        "Culture": "string",
        "FailedCourseId": "guid",
        "Title": "string",
        "Description": "string",
        "CourseType": "integer",
        "Categories": [],
        "Tags": [],
        "CourseLayoutId": "guid",
        "CourseSessionEnrollmentType": "integer",
        "TeacherLogins": [],
        "TrainerLogins": [],
        "VisitorLogins": [],
        "CertificateTemplateId": "guid",
        "CourseID": "string",
        "Duration": "string",
        "LongDescription": "string",
        "PublishingSettings": {},
        "ExpirySettings": {},
        "DueDateSettings": {},
        "ShowInCatalog": "boolean",
        "CEU": "number",
        "ImageUrl": "string",
        "BannerImageUrl": "string",
        "EnrollmentFlow": "integer",
        "Competencies": [],
        "CompetencyRevocation": {},
        "CourseTargeting": "boolean",
        "UnenrollDisabled": "boolean",
        "WaitingListEnabled": "boolean",
        "IsRequired": "boolean",
        "MaxAttendees": "integer",
        "SessionRequestsEnabled": "boolean",
        "IsRetakeAllowed": "boolean",
        "EnrollmentDeadline": "2022-04-07T08:10:39Z",
        "Url": "string"
      }
    },
    "Elearningforce.LMS.Common.CourseCatalogs.CreationArguments.Category": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Id": {
          "type": "string"
        },
        "ParentId": {
          "type": "string"
        },
        "IsNew": {
          "type": "boolean"
        }
      },
      "example": {
        "Name": "string",
        "Id": "guid",
        "ParentId": "guid",
        "IsNew": "boolean"
      }
    },
    "Elearningforce.LMS.Common.CourseCatalogs.CreationArguments.Tag": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "TagName": {
          "type": "string"
        },
        "isNew": {
          "type": "boolean"
        }
      },
      "example": {
        "Id": "guid",
        "TagName": "string",
        "isNew": "boolean"
      }
    },
    "Elearningforce.LMS.Api.V2.Models.DeleteCourseOptions": {
      "type": "object",
      "properties": {
        "DeleteVisitors": {
          "type": "boolean"
        },
        "DeleteMembers": {
          "type": "boolean"
        },
        "DeleteAdministrators": {
          "type": "boolean"
        }
      },
      "example": {
        "DeleteVisitors": "boolean",
        "DeleteMembers": "boolean",
        "DeleteAdministrators": "boolean"
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.Course]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "Elearningforce.LMS.Api.V2.Models.CourseUpdateParameters": {
      "required": [
        "UICulture",
        "Title",
        "Description"
      ],
      "type": "object",
      "properties": {
        "UICulture": {
          "type": "string"
        },
        "Culture": {
          "type": "string"
        },
        "FailedCourseId": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "CourseType": {
          "format": "int32",
          "enum": [
            0,
            1,
            3,
            4,
            5
          ],
          "type": "integer"
        },
        "Categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Common.CourseCatalogs.CreationArguments.Category"
          }
        },
        "Tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Common.CourseCatalogs.CreationArguments.Tag"
          }
        },
        "CourseLayoutId": {
          "type": "string"
        },
        "CourseSessionEnrollmentType": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "TeacherLogins": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "TrainerLogins": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "VisitorLogins": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CertificateTemplateId": {
          "type": "string"
        },
        "CourseID": {
          "type": "string"
        },
        "Duration": {
          "type": "string"
        },
        "LongDescription": {
          "type": "string"
        },
        "PublishingSettings": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.PublishingSettings"
        },
        "ExpirySettings": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CertificateExpirySettings"
        },
        "DueDateSettings": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.DueDateSettings"
        },
        "ShowInCatalog": {
          "type": "boolean"
        },
        "CEU": {
          "format": "double",
          "type": "number"
        },
        "ImageUrl": {
          "type": "string"
        },
        "BannerImageUrl": {
          "type": "string"
        },
        "EnrollmentFlow": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "Competencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CompetencyLevel"
          }
        },
        "CompetencyRevocation": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CompetencyRevocationSettings"
        },
        "CourseTargeting": {
          "type": "boolean"
        },
        "UnenrollDisabled": {
          "type": "boolean"
        },
        "WaitingListEnabled": {
          "type": "boolean"
        },
        "IsRequired": {
          "type": "boolean"
        },
        "MaxAttendees": {
          "format": "int32",
          "type": "integer"
        },
        "SessionRequestsEnabled": {
          "type": "boolean"
        },
        "IsRetakeAllowed": {
          "type": "boolean"
        },
        "EnrollmentDeadline": {
          "format": "date-time",
          "type": "string"
        },
        "Url": {
          "type": "string"
        }
      },
      "example": {
        "UICulture": "string",
        "Culture": "string",
        "FailedCourseId": "guid",
        "Title": "string",
        "Description": "string",
        "CourseType": "integer",
        "Categories": [],
        "Tags": [],
        "CourseLayoutId": "guid",
        "CourseSessionEnrollmentType": "integer",
        "TeacherLogins": [],
        "TrainerLogins": [],
        "VisitorLogins": [],
        "CertificateTemplateId": "guid",
        "CourseID": "string",
        "Duration": "string",
        "LongDescription": "string",
        "PublishingSettings": {},
        "ExpirySettings": {},
        "DueDateSettings": {},
        "ShowInCatalog": "boolean",
        "CEU": "number",
        "ImageUrl": "string",
        "BannerImageUrl": "string",
        "EnrollmentFlow": "integer",
        "Competencies": [],
        "CompetencyRevocation": {},
        "CourseTargeting": "boolean",
        "UnenrollDisabled": "boolean",
        "WaitingListEnabled": "boolean",
        "IsRequired": "boolean",
        "MaxAttendees": "integer",
        "SessionRequestsEnabled": "boolean",
        "IsRetakeAllowed": "boolean",
        "EnrollmentDeadline": "2022-04-07T08:10:39Z",
        "Url": "string"
      }
    },
    "Elearningforce.LMS.Api.Extensions.PatchObject[Elearningforce.LMS.Api.V2.Models.CourseUpdateParameters]": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Model": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CourseUpdateParameters"
        }
      },
      "example": {
        "Properties": [],
        "Model": {}
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.CourseSession]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.OData.V2.Models.CourseSessionRequest]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.OData.V2.Models.CourseSessionRequest"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.OData.V2.Models.CourseSessionRequest]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.CourseSession]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.CourseSession"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.Tag]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Tag]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Tag"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.EnrollmentFlow]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.EnrollmentFlow"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.EnrollmentFlow": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "CourseCatalogId": {
          "type": "string"
        },
        "Type": {
          "format": "int32",
          "description": "Enrollment Flow Type\r\n            https://api.365.systems/Documentation/html/types.html#enrollment-flow-type",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "IsEnabled": {
          "type": "boolean"
        },
        "IsDeleted": {
          "type": "boolean"
        }
      },
      "example": {
        "Id": "guid",
        "CourseCatalogId": "guid",
        "Type": "integer",
        "IsEnabled": "boolean",
        "IsDeleted": "boolean"
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.EnrollmentFlow]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.Enrollment]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Enrollment]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Enrollment"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "Elearningforce.LMS.Api.Extensions.PatchObject[Elearningforce.LMS.Api.OData.V2.Models.EnrollmentUpdateData]": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Model": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.OData.V2.Models.EnrollmentUpdateData"
        }
      },
      "example": {
        "Properties": [],
        "Model": {}
      }
    },
    "Elearningforce.LMS.Api.OData.V2.Models.EnrollmentUpdateData": {
      "type": "object",
      "properties": {
        "RegistrationDate": {
          "format": "date-time",
          "description": "Enrollment date",
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "description": "Date when user starts course",
          "type": "string"
        },
        "CompletionDate": {
          "format": "date-time",
          "description": "Date when user completes course",
          "type": "string"
        },
        "CoursePassingStatus": {
          "format": "int32",
          "description": "Course passing status\r\n            https://api.365.systems/Documentation/html/types.html#course-passing-status",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "CEU": {
          "format": "double",
          "description": "Continuing education units that were earner within this enrollment",
          "type": "number"
        }
      },
      "example": {
        "RegistrationDate": "2022-04-07T08:10:39Z",
        "StartDate": "2022-04-07T08:10:39Z",
        "CompletionDate": "2022-04-07T08:10:39Z",
        "CoursePassingStatus": "integer",
        "CEU": "number"
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.ExternalApp]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.ExternalApp"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.ExternalApp]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.LearningModuleAttempt]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.LearningModuleAttempt"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.LearningModuleAttempt]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.LearningModule]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.LearningModule"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.LearningModule]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.QuestionPoolCategory]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.QuestionPoolCategory]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.QuestionPoolCategory"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.QuizAttempt]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.QuizAttempt"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.QuizAttempt]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.QuestionPool]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.QuestionPool"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.QuestionPool]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Quiz]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Quiz"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.QuizCreationData": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "CourseCatalogId": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "MaxAttemptsLimit": {
          "format": "int32",
          "type": "integer"
        },
        "PassingPercentage": {
          "format": "int32",
          "type": "integer"
        },
        "IsPublished": {
          "type": "boolean"
        },
        "PublishingStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "PublishingEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "Randomize": {
          "type": "boolean"
        },
        "ShowScore": {
          "type": "boolean"
        },
        "ShowCompletionScore": {
          "type": "boolean"
        },
        "AllowReview": {
          "type": "boolean"
        },
        "ReviewMode": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "TimeLimit": {
          "format": "int32",
          "type": "integer"
        },
        "ShowTimer": {
          "type": "boolean"
        },
        "Questions": {
          "description": "Serialized questions in JSON format\r\n            https://api.365.systems/Documentation/html/types.html#quiz-questions",
          "type": "string"
        },
        "Sharing": {
          "$ref": "#/definitions/Elearningforce.LMS.Common.Quizzes.Commands.SharingProps"
        },
        "ShowPoints": {
          "type": "boolean"
        },
        "AllowNavigation": {
          "type": "boolean"
        }
      },
      "example": {
        "Id": "guid",
        "CourseCatalogId": "guid",
        "Title": "string",
        "Description": "string",
        "MaxAttemptsLimit": "integer",
        "PassingPercentage": "integer",
        "IsPublished": "boolean",
        "PublishingStartDate": "2022-04-07T08:10:39Z",
        "PublishingEndDate": "2022-04-07T08:10:39Z",
        "Randomize": "boolean",
        "ShowScore": "boolean",
        "ShowCompletionScore": "boolean",
        "AllowReview": "boolean",
        "ReviewMode": "integer",
        "TimeLimit": "integer",
        "ShowTimer": "boolean",
        "Questions": "string",
        "Sharing": {},
        "ShowPoints": "boolean",
        "AllowNavigation": "boolean"
      }
    },
    "Elearningforce.LMS.Common.Quizzes.Commands.SharingProps": {
      "type": "object",
      "properties": {
        "CourseCatalogId": {
          "type": "string"
        },
        "CourseIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "example": {
        "CourseCatalogId": "guid",
        "CourseIds": []
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.Quiz]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "Elearningforce.LMS.Api.V2.Models.QuizUpdateData": {
      "type": "object",
      "properties": {
        "Title": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "MaxAttemptsLimit": {
          "format": "int32",
          "type": "integer"
        },
        "PassingPercentage": {
          "format": "int32",
          "type": "integer"
        },
        "IsPublished": {
          "type": "boolean"
        },
        "PublishingStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "PublishingEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "Randomize": {
          "type": "boolean"
        },
        "ShowScore": {
          "type": "boolean"
        },
        "ShowCompletionScore": {
          "type": "boolean"
        },
        "AllowReview": {
          "type": "boolean"
        },
        "ReviewMode": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "TimeLimit": {
          "format": "int32",
          "type": "integer"
        },
        "ShowTimer": {
          "type": "boolean"
        },
        "Questions": {
          "description": "Serialized questions in JSON format\r\n            https://api.365.systems/Documentation/html/types.html#quiz-questions",
          "type": "string"
        },
        "Sharing": {
          "$ref": "#/definitions/Elearningforce.LMS.Common.Quizzes.Commands.SharingProps"
        },
        "ShowPoints": {
          "type": "boolean"
        },
        "AllowNavigation": {
          "type": "boolean"
        }
      },
      "example": {
        "Title": "string",
        "Description": "string",
        "MaxAttemptsLimit": "integer",
        "PassingPercentage": "integer",
        "IsPublished": "boolean",
        "PublishingStartDate": "2022-04-07T08:10:39Z",
        "PublishingEndDate": "2022-04-07T08:10:39Z",
        "Randomize": "boolean",
        "ShowScore": "boolean",
        "ShowCompletionScore": "boolean",
        "AllowReview": "boolean",
        "ReviewMode": "integer",
        "TimeLimit": "integer",
        "ShowTimer": "boolean",
        "Questions": "string",
        "Sharing": {},
        "ShowPoints": "boolean",
        "AllowNavigation": "boolean"
      }
    },
    "Elearningforce.LMS.Api.Extensions.PatchObject[Elearningforce.LMS.Api.V2.Models.QuizUpdateData]": {
      "type": "object",
      "properties": {
        "Properties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Model": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.QuizUpdateData"
        }
      },
      "example": {
        "Properties": [],
        "Model": {}
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.ScormAttempt]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.ScormAttempt"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.ScormAttempt]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.Scorm]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Scorm"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.Scorm]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.TrainingPlanInfo]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.TrainingPlanInfo"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.TrainingPlanInfo": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Training Plan unique id",
          "type": "string"
        },
        "Title": {
          "description": "Course title",
          "type": "string"
        },
        "CourseCatalogId": {
          "description": "Id of Course Catalog that course is related to",
          "type": "string"
        },
        "SharepointWeb": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.SharepointWeb",
          "description": "SharePoint Site associated with this course"
        },
        "Courses": {
          "description": "List of training plan courses",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.TrainingPlanCourse"
          }
        }
      },
      "example": {
        "Id": "guid",
        "Title": "string",
        "CourseCatalogId": "guid",
        "SharepointWeb": {},
        "Courses": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.TrainingPlanCourse": {
      "type": "object",
      "properties": {
        "TrainingPlanId": {
          "type": "string"
        },
        "CourseId": {
          "type": "string"
        },
        "Order": {
          "format": "int32",
          "type": "integer"
        },
        "HasPrerequisite": {
          "type": "boolean"
        },
        "Course": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.Course"
        }
      },
      "example": {
        "TrainingPlanId": "guid",
        "CourseId": "guid",
        "Order": "integer",
        "HasPrerequisite": "boolean"
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.TrainingPlanInfo]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.UserCompetency]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.UserCompetency"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.UserCompetency]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.OData.V2.Models.UserField]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.OData.V2.Models.UserField]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.OData.V2.Models.UserField"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "Elearningforce.LMS.Api.OData.V2.Models.UserField": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "User field id",
          "type": "string"
        },
        "Title": {
          "description": "Title",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "Type": {
          "format": "int32",
          "description": "User field type",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "IsPredefined": {
          "description": "Is user field predefined",
          "type": "boolean"
        },
        "IsVisible": {
          "description": "Is user field visible",
          "type": "boolean"
        },
        "IsSynced": {
          "description": "Is user field synchronized",
          "type": "boolean"
        },
        "CreatedAt": {
          "format": "date-time",
          "description": "Date when user field was created",
          "type": "string"
        },
        "CreatedByUserId": {
          "description": "Id of user who created user field",
          "type": "string"
        },
        "CreatedBy": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User",
          "description": "User who created user field"
        },
        "ModifiedAt": {
          "format": "date-time",
          "description": "Date when user field was last modified",
          "type": "string"
        },
        "ModifiedByUserId": {
          "description": "Id of user who last modified user field",
          "type": "string"
        },
        "ModifiedBy": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User",
          "description": "User who last modified user field"
        }
      },
      "example": {
        "Id": "guid",
        "Title": "string",
        "Description": "string",
        "Type": "integer",
        "IsPredefined": "boolean",
        "IsVisible": "boolean",
        "IsSynced": "boolean",
        "CreatedAt": "2022-04-07T08:10:39Z",
        "CreatedByUserId": "guid",
        "ModifiedAt": "2022-04-07T08:10:39Z",
        "ModifiedByUserId": "guid"
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.UserRank]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.UserRank"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "Elearningforce.LMS.Api.V2.Models.UserRank": {
      "type": "object",
      "properties": {
        "UserLoginName": {
          "type": "string"
        },
        "UserId": {
          "type": "string"
        },
        "User": {
          "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User"
        },
        "Rank": {
          "format": "int32",
          "type": "integer"
        },
        "CEU": {
          "format": "int32",
          "type": "integer"
        },
        "DecimalCEU": {
          "format": "decimal",
          "type": "number"
        }
      },
      "example": {
        "UserLoginName": "string",
        "UserId": "guid",
        "Rank": "integer",
        "CEU": "integer",
        "DecimalCEU": "number"
      }
    },
    "Swashbuckle.OData.ODataResponse[System.Collections.Generic.List[Elearningforce.LMS.Api.V2.Models.User]]": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Elearningforce.LMS.Api.V2.Models.User"
          }
        }
      },
      "example": {
        "@odata.context": "string",
        "value": []
      }
    },
    "System.Web.OData.Query.ODataQueryOptions[Elearningforce.LMS.Api.V2.Models.User]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/System.Web.OData.ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "$ref": "#/definitions/System.Object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/System.Web.OData.Query.ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/System.Web.OData.Query.SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/System.Web.OData.Query.FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/System.Web.OData.Query.OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/System.Web.OData.Query.SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/System.Web.OData.Query.TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#/definitions/System.Web.OData.Query.CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/System.Web.OData.Query.Validators.ODataQueryValidator"
        }
      },
      "example": {
        "IfMatch": {},
        "IfNoneMatch": {},
        "Context": {},
        "Request": {},
        "RawValues": {},
        "SelectExpand": {},
        "Filter": {},
        "OrderBy": {},
        "Skip": {},
        "Top": {},
        "Count": {},
        "Validator": {}
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "basic": {
      "type": "basic",
      "description": "Basic HTTP Authentication"
    },
    "oauth2": {
      "type": "oauth2",
      "description": "OAuth2 Implicit Grant",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
      "scopes": {
        "751987ae-7307-451f-a4b1-e4dc2dfdd507/.default": "Allow the application to access LMS365 on your behalf."
      }
    }
  },
  "security": [
    {
      "basic": []
    },
    {
      "oauth2": []
    }
  ],
  "tags": []
}